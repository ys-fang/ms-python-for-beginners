WEBVTT

00:00:05.720 --> 00:00:08.370
>> 我們已經學到了不少

00:00:08.370 --> 00:00:10.620
可以用Python做的事情

00:00:10.620 --> 00:00:13.800
現在我們要談談
如何呼叫API

00:00:13.800 --> 00:00:16.965
API非常強大

00:00:16.965 --> 00:00:18.840
在開始使用它之前

00:00:18.840 --> 00:00:21.405
我們先來了解API是什麼

00:00:21.405 --> 00:00:24.110
當你寫了一些函數

00:00:24.110 --> 00:00:26.360
甚至創建了一個函式庫

00:00:26.360 --> 00:00:28.220
如果你不只是自己用

00:00:28.220 --> 00:00:31.145
還想分享給其他程式設計師

00:00:31.145 --> 00:00:34.400
你可以創建一個Web Service
來做到這件事

00:00:34.400 --> 00:00:36.470
我們把我們的函數

00:00:36.470 --> 00:00:38.990
放到網路伺服器

00:00:38.990 --> 00:00:42.140
然後得到一個Web Service的網址

00:00:42.140 --> 00:00:43.730
就像網站會有一個網址一樣

00:00:43.730 --> 00:00:45.605
有了網址

00:00:45.605 --> 00:00:46.880
其他程式才能使用它

00:00:46.880 --> 00:00:50.585
所謂Web Service就是一個

00:00:50.585 --> 00:00:53.660
存在網路伺服器上的函數

00:00:53.660 --> 00:00:57.950
然後接受世界上任何地方的電腦
來呼叫這個函數

00:00:57.950 --> 00:01:00.155
這是很酷的一件事

00:01:00.155 --> 00:01:02.060
所以如果你有網址

00:01:02.060 --> 00:01:03.230
假設我有一台伺服器

00:01:03.230 --> 00:01:05.270
網址是"http://contoso"...

00:01:05.270 --> 00:01:07.220
嗯，我們先舉另外一個實際的

00:01:07.220 --> 00:01:09.695
Web Service的範例好了

00:01:09.695 --> 00:01:13.325
微軟提供了很多Web Service

00:01:13.325 --> 00:01:16.280
例如這是電腦視覺API

00:01:16.280 --> 00:01:19.325
這是一組使用人工智慧來

00:01:19.325 --> 00:01:21.665
處理數位照片的函式庫

00:01:21.665 --> 00:01:24.935
例如你可以上傳

00:01:24.935 --> 00:01:26.690
一張照片

00:01:26.690 --> 00:01:28.580
然後它會告訴你照片裡面有甚麼

00:01:28.580 --> 00:01:30.619
透過人工智慧

00:01:30.619 --> 00:01:32.570
來分析照片

00:01:32.570 --> 00:01:35.000
例如如果你的照片中有拍到文字

00:01:35.000 --> 00:01:37.160
這個Web Service可能會辨識出來

00:01:37.160 --> 00:01:39.830
然後告訴你上面寫甚麼

00:01:39.830 --> 00:01:41.450
所以如果我想呼叫

00:01:41.450 --> 00:01:45.470
"分析影像"這個Web Service

00:01:45.470 --> 00:01:46.985
我要先上傳圖片

00:01:46.985 --> 00:01:48.260
然後它會返回訊息

00:01:48.260 --> 00:01:49.910
告訴我圖片中有什麼

00:01:49.910 --> 00:01:52.715
首先，我需要知道它的網址

00:01:52.715 --> 00:01:55.520
我需要閱讀寫這個
Web Service的人

00:01:55.520 --> 00:01:58.580
所寫的說明文件
才能知道怎麼呼叫它

00:01:58.580 --> 00:02:00.350
在這個例子中

00:02:00.350 --> 00:02:03.350
這個Web Service
寫了很詳細的說明

00:02:03.350 --> 00:02:06.740
我可以在文件上看到
有那些不同網址可以用

00:02:06.740 --> 00:02:08.525
我可以看到函數的名稱

00:02:08.525 --> 00:02:13.110
所以回到我們投影片
當我們的程式需要呼叫Web Service

00:02:13.110 --> 00:02:15.260
基本上我需要
知道伺服器名稱

00:02:15.260 --> 00:02:17.000
和要呼叫的函數名稱

00:02:17.000 --> 00:02:19.190
這些是其他電腦視覺API

00:02:19.190 --> 00:02:22.700
可能的函數的名稱

00:02:22.700 --> 00:02:26.005
所以首先，我需要網址

00:02:26.005 --> 00:02:28.690
當然，如果我要呼叫函數

00:02:28.690 --> 00:02:31.450
很可能我需要

00:02:31.450 --> 00:02:34.450
傳遞參數給它

00:02:34.450 --> 00:02:36.070
因為存儲在伺服器中的函數

00:02:36.070 --> 00:02:38.050
不會知道我要分析甚麼

00:02:38.050 --> 00:02:40.390
所以不但要知道函數名稱

00:02:40.390 --> 00:02:42.460
我還需要知道

00:02:42.460 --> 00:02:45.695
這個函數有那些參數

00:02:45.695 --> 00:02:48.290
如果我們查看說明文件

00:02:48.290 --> 00:02:50.770
我們可以看到它列出
所有Web Service的名稱

00:02:50.770 --> 00:02:53.305
左側有Web Service的名稱

00:02:53.305 --> 00:02:55.405
分析圖片、批量讀取檔案

00:02:55.405 --> 00:02:58.045
檢測物件、OCR等等

00:02:58.045 --> 00:02:59.755
如果我們往下看

00:02:59.755 --> 00:03:02.425
就可以看到參數

00:03:02.425 --> 00:03:04.450
每個Web Service的參數

00:03:04.450 --> 00:03:06.355
也就是這個函數被呼叫時

00:03:06.355 --> 00:03:08.185
需要提供的參數

00:03:08.185 --> 00:03:11.180
所以它希望我提供
"visualFeatures"

00:03:11.180 --> 00:03:12.905
它告訴我
這是將是一個字串

00:03:12.905 --> 00:03:15.650
所以我知道要提供
甚麼資料型別

00:03:15.650 --> 00:03:17.390
它也告訴我
要提供甚麼資訊

00:03:17.390 --> 00:03:19.645
正確的格式是甚麼

00:03:19.645 --> 00:03:21.530
然後它說有另一個參數"details"

00:03:21.530 --> 00:03:24.560
另一個參數"lauguage"

00:03:24.560 --> 00:03:26.480
以"language"為例

00:03:26.480 --> 00:03:28.940
如果我指定為"English"
意思就是

00:03:28.940 --> 00:03:30.755
分析完影像後

00:03:30.755 --> 00:03:34.054
以英語返回結果
你也可以選用其他語言

00:03:34.054 --> 00:03:36.890
也就是如果這個Web Service
看到一隻熊

00:03:36.890 --> 00:03:38.450
它就會回傳
英語單字的熊

00:03:38.450 --> 00:03:40.445
當然也可以用
日語、西班牙文等

00:03:40.445 --> 00:03:43.610
所以現在我
透過查詢說明文件

00:03:43.610 --> 00:03:44.930
知道了Web Service的名字

00:03:44.930 --> 00:03:48.440
以及有那些參數

00:03:48.440 --> 00:03:51.245
好的，還有一件有趣的事情

00:03:51.245 --> 00:03:53.270
如果把我的函數放在伺服器上

00:03:53.270 --> 00:03:55.340
那是否世界上的任何人

00:03:55.340 --> 00:03:56.750
只要知道網址

00:03:56.750 --> 00:03:58.550
就能隨時呼叫它？

00:03:58.550 --> 00:04:00.140
我可能想要控制

00:04:00.140 --> 00:04:03.500
只讓某些人能呼叫它

00:04:03.500 --> 00:04:05.885
因為伺服器和網路
都要花錢

00:04:05.885 --> 00:04:09.245
如果太多人用我的Web Service
雲端服務廠商可能要跟我收一大筆錢

00:04:09.245 --> 00:04:11.330
所以我可能也要

00:04:11.330 --> 00:04:13.430
跟呼叫我的服務的人收錢

00:04:13.430 --> 00:04:15.410
也有可能讓人免費使用

00:04:15.410 --> 00:04:17.435
端看我為什麼要提供這個服務

00:04:17.435 --> 00:04:20.315
管制使用權的方法之一
是透過金鑰來管理

00:04:20.315 --> 00:04:23.060
這是網站常使用的方法

00:04:23.060 --> 00:04:25.010
就是當我們使用API時

00:04:25.010 --> 00:04:28.075
Web Service會問客戶端
"你的鑰匙是什麼？"

00:04:28.075 --> 00:04:30.800
因此一般來說
會有一個網站

00:04:30.800 --> 00:04:33.725
你必須先去註冊
或購買軟體授權

00:04:33.725 --> 00:04:35.830
然後你得到了一個金鑰

00:04:35.830 --> 00:04:38.250
一個你獨有的金鑰授予你許可權

00:04:38.250 --> 00:04:41.030
來呼叫我的Web Service

00:04:41.030 --> 00:04:44.500
所以當你呼叫我的Web Service
你要先把金鑰給我

00:04:44.500 --> 00:04:46.690
"我知道這個金鑰，這是蘇珊的金鑰"

00:04:46.690 --> 00:04:47.980
"我記得她取得了這個金鑰"

00:04:47.980 --> 00:04:49.000
也許她付過錢了

00:04:49.000 --> 00:04:50.420
也或者她給了我足夠的資訊

00:04:50.420 --> 00:04:51.980
讓我可以相信她來
呼叫我的函數

00:04:51.980 --> 00:04:55.320
一旦我知道你有那把鑰匙

00:04:55.320 --> 00:04:56.460
那我就說

00:04:56.460 --> 00:04:58.815
"好吧，現在我
會讓你呼叫該函數"

00:04:58.815 --> 00:05:01.460
所以通常你必須
要先在某個網站

00:05:01.460 --> 00:05:05.305
創建帳號、註冊、認證等等
才能拿到金鑰

00:05:05.305 --> 00:05:07.490
金鑰基本上就是
你可以呼叫

00:05:07.490 --> 00:05:10.715
存儲在網路伺服器上某個函數
的許可證

00:05:10.715 --> 00:05:13.580
現在還有一個通過網路

00:05:13.580 --> 00:05:15.860
發送訊息的標準

00:05:15.860 --> 00:05:18.590
叫做HTTP協定

00:05:18.590 --> 00:05:20.990
所以你常到處看到"HTTP"

00:05:20.990 --> 00:05:22.445
尤其是在網址上

00:05:22.445 --> 00:05:28.990
雖然你不必鍵入"HTTP://"

00:05:28.990 --> 00:05:31.190
但你總是在瀏覽器的網址列看到它

00:05:31.190 --> 00:05:33.260
所以基本上HTTP

00:05:33.260 --> 00:05:35.800
這就是網際網路
交換訊息的一種通訊協定

00:05:35.800 --> 00:05:38.705
在HTTP協定下發送訊息

00:05:38.705 --> 00:05:41.480
有兩種常見的方法

00:05:41.480 --> 00:05:43.835
一個叫做GET和
一個叫為POST

00:05:43.835 --> 00:05:47.930
如果你回去看
電腦視覺API的說明文件

00:05:47.930 --> 00:05:49.700
你會看到在左邊

00:05:49.700 --> 00:05:52.025
當我看著
檔，它告訴我，

00:05:52.025 --> 00:05:54.155
"嘿，蘇珊，如果你想
呼叫Analyze Image服務"

00:05:54.155 --> 00:05:55.565
你必須使用POST

00:05:55.565 --> 00:05:58.325
如果要使用
"List Domain Specific Models"

00:05:58.325 --> 00:05:59.855
你必須使用GET

00:05:59.855 --> 00:06:02.450
如果你想呼叫OCR
要使用POST

00:06:02.450 --> 00:06:06.445
說明文件將告訴
你需要用哪一種

00:06:06.445 --> 00:06:09.900
兩者的區別是什麼呢？

00:06:09.900 --> 00:06:12.555
區別在於GET方法

00:06:12.555 --> 00:06:13.850
將值透過"查詢字串"的格式

00:06:13.850 --> 00:06:16.250
接續在網址的後面

00:06:16.250 --> 00:06:18.799
傳遞給函數

00:06:18.799 --> 00:06:21.940
如果有任何特殊字元

00:06:21.940 --> 00:06:23.450
像斜線和空格

00:06:23.450 --> 00:06:25.550
需要使用跳脫字元

00:06:25.550 --> 00:06:26.930
經過處理

00:06:26.930 --> 00:06:28.550
才能成為網址的一部份

00:06:28.550 --> 00:06:30.350
另外就是上傳的資料量有限

00:06:30.350 --> 00:06:31.940
因為網址的總長度

00:06:31.940 --> 00:06:33.800
是有限的

00:06:33.800 --> 00:06:35.900
而查詢字串包含在網址中

00:06:35.900 --> 00:06:37.370
也就是上傳的內容

00:06:37.370 --> 00:06:40.310
都包含在瀏覽器的網址列中

00:06:40.310 --> 00:06:43.940
而POST
可以透過查詢字串也可以

00:06:43.940 --> 00:06:47.945
使用"body"來傳遞值
這就比GET好多了

00:06:47.945 --> 00:06:49.745
讓事情變簡單

00:06:49.745 --> 00:06:50.870
你不必擔心

00:06:50.870 --> 00:06:52.540
訊息中有特殊字元

00:06:52.540 --> 00:06:54.830
而且還可以傳遞更多資料

00:06:54.830 --> 00:06:57.895
所以如果我們要上傳檔案

00:06:57.895 --> 00:07:00.840
我們通常會使用POST

00:07:00.840 --> 00:07:03.470
因為當使用POST
可以把檔案、圖片等

00:07:03.470 --> 00:07:06.170
要上傳的東西放在"body"中

00:07:06.170 --> 00:07:08.210
也因此很多Web Service
都要使用POST方法來呼叫

00:07:08.210 --> 00:07:09.905
我們再看一下這個說明網頁

00:07:09.905 --> 00:07:12.630
"Analyze Image"
你會注意到上面寫著

00:07:12.630 --> 00:07:14.070
"POST"

00:07:14.070 --> 00:07:15.680
這很合理
因為我需要上傳圖片

00:07:15.680 --> 00:07:19.055
讓這個函數幫我分析

00:07:19.055 --> 00:07:21.240
並告訴我圖片中的內容

00:07:22.280 --> 00:07:25.160
Python有一個好用的函式庫

00:07:25.160 --> 00:07:27.755
叫做"requests"

00:07:27.755 --> 00:07:30.230
我們之前學過了函式庫

00:07:30.230 --> 00:07:31.760
函式庫讓
程式設計師的生活更輕鬆

00:07:31.760 --> 00:07:33.350
而其中一個關於
HTTP通訊協定的函式庫

00:07:33.350 --> 00:07:36.755
就是"requests"

00:07:36.755 --> 00:07:39.140
它所做的基本上
就是簡化了

00:07:39.140 --> 00:07:41.965
POST和GET的呼叫方式

00:07:41.965 --> 00:07:44.640
你只需要
"import requests"

00:07:44.640 --> 00:07:45.770
當然在使用之前
要先用"pip"安裝

00:07:45.770 --> 00:07:48.230
就像克里斯多夫教過的

00:07:48.230 --> 00:07:50.915
然後你就可以呼叫函數
"requests.post()"

00:07:50.915 --> 00:07:52.700
說："嘿，我想用
POST方法的呼叫"

00:07:52.700 --> 00:07:55.210
因為我需要呼叫"Analyze Image"

00:07:55.210 --> 00:07:58.655
如果去查requests.post()
的說明文件

00:07:58.655 --> 00:08:01.415
它會告訴你
參數有那些

00:08:01.415 --> 00:08:02.950
包括網址

00:08:02.950 --> 00:08:04.325
也就是伺服器的網址

00:08:04.325 --> 00:08:06.290
加上Web Service的名稱

00:08:06.290 --> 00:08:10.310
會長得像這樣：
"http://contoso.com/analyze"

00:08:10.310 --> 00:08:13.830
我怎麼知道網址是甚麼？
只能從Web Service的說明文件查

00:08:13.830 --> 00:08:15.510
像這裡就有

00:08:15.510 --> 00:08:17.680
然後這裡是函數的名稱

00:08:17.680 --> 00:08:22.610
然後，還要給一個參數"http_headers"
看起來像一個可怕的東西

00:08:22.610 --> 00:08:24.090
但不要驚慌

00:08:24.090 --> 00:08:26.195
繼續查看說明文件

00:08:26.195 --> 00:08:29.975
如果你看看

00:08:29.975 --> 00:08:32.195
"Analyze Image"的說明文件

00:08:32.195 --> 00:08:34.925
他上面寫要用POST

00:08:34.925 --> 00:08:37.355
也說明了"Request-headers"的格式

00:08:37.355 --> 00:08:39.770
它告訴我"http_headers"

00:08:39.770 --> 00:08:42.215
這個參數要傳的值是甚麼格式

00:08:42.215 --> 00:08:46.175
包含了"Content-Type"和
"Ocp-Apim-Subscription-Key"

00:08:46.175 --> 00:08:48.170
啊，這就是呼叫這個API時

00:08:48.170 --> 00:08:50.850
所用的的許可權

00:08:50.950 --> 00:08:53.635
但三個參數是
"function_parameters"

00:08:53.635 --> 00:08:56.430
也就是說明文件上的

00:08:56.430 --> 00:08:57.705
"Reuqest parameters"

00:08:57.705 --> 00:09:00.260
說明文件會寫清楚

00:09:00.260 --> 00:09:03.350
格式和可用的值

00:09:03.350 --> 00:09:06.495
這就是我們一再強調的

00:09:06.495 --> 00:09:08.960
一定要寫好註解和說明文件

00:09:08.960 --> 00:09:13.715
否則別人會不知道怎麼用
然後是"message_body"

00:09:13.715 --> 00:09:17.120
這裡就是我要上傳的圖片
我怎麼知道呢？

00:09:17.120 --> 00:09:19.430
因為說明文件上

00:09:19.430 --> 00:09:22.210
有詳細說明

00:09:22.210 --> 00:09:24.610
他告訴我可以上傳

00:09:24.610 --> 00:09:27.575
哪幾種檔案格式

00:09:27.575 --> 00:09:29.029
它可以接受

00:09:29.029 --> 00:09:30.680
"JPEG, PNG, GIF, BMP"
等格式的檔案

00:09:30.680 --> 00:09:32.450
檔案不能大於4MB

00:09:32.450 --> 00:09:34.430
好的說明文件

00:09:34.430 --> 00:09:37.055
能增加成功呼叫的機率

00:09:37.055 --> 00:09:40.290
這個參數就是指到我想上傳的圖片

00:09:40.430 --> 00:09:43.580
學習如何呼叫API

00:09:43.580 --> 00:09:45.290
其實就是學會

00:09:45.290 --> 00:09:47.630
看API說明文件

00:09:47.630 --> 00:09:49.640
然後了解在自己的程式中
要如何對應API的呼叫參數

00:09:49.640 --> 00:09:52.145
學會使用API
將為你解鎖一個全新的世界

00:09:52.145 --> 00:09:54.610
你將可以呼叫外部服務

00:09:54.610 --> 00:09:58.100
使用別人已經寫好的函數

00:09:58.100 --> 00:10:02.870
像是分析圖片、辨識文字等等

00:10:02.870 --> 00:10:04.475
而查看說明文件

00:10:04.475 --> 00:10:06.340
是成功的關鍵

00:10:06.340 --> 00:10:08.890
下一單元讓我們實際
一行一行的來看

00:10:08.890 --> 00:10:12.290
如何呼叫API
以及實際執行的狀況

