WEBVTT

00:00:03.500 --> 00:00:06.300
>> 在之前的課程中

00:00:06.300 --> 00:00:08.460
蘇珊介紹了

00:00:08.460 --> 00:00:10.800
如何呼叫外部API

00:00:10.800 --> 00:00:13.620
而無論你呼叫任何外部API

00:00:13.620 --> 00:00:15.420
你都需要某種形式的

00:00:15.420 --> 00:00:18.090
金鑰或密碼或其他東西

00:00:18.090 --> 00:00:19.770
來對你要呼叫

00:00:19.770 --> 00:00:20.940
的外部服務

00:00:20.940 --> 00:00:23.170
證明你是誰

00:00:23.170 --> 00:00:26.159
如果服務有計費

00:00:26.159 --> 00:00:29.655
外部服務才知道該向誰收費

00:00:29.655 --> 00:00:31.110
這很合理

00:00:31.110 --> 00:00:34.665
而蘇珊之前演示的時候

00:00:34.665 --> 00:00:37.260
她把API金鑰

00:00:37.260 --> 00:00:40.545
放在Python程式碼中

00:00:40.545 --> 00:00:42.750
對於一個簡單的小演示來說、

00:00:42.750 --> 00:00:45.025
對於一個簡單的概念驗證來說、

00:00:45.025 --> 00:00:47.750
對於一個永遠不會發佈出去

00:00:47.750 --> 00:00:51.850
的檔案來說，這樣做沒問題

00:00:51.850 --> 00:00:55.640
但對於大部分

00:00:55.640 --> 00:00:56.750
可能用於生產環境的程式

00:00:56.750 --> 00:00:59.915
以及程式碼可能會

00:00:59.915 --> 00:01:03.490
分享出去的狀況

00:01:03.490 --> 00:01:07.275
這絕對不是一個好的做法

00:01:07.275 --> 00:01:14.810
分享密碼或將密碼放在

00:01:14.810 --> 00:01:18.140
一個會被公開的未加密的文字檔

00:01:18.140 --> 00:01:22.880
從資安的角度來看
絕對是一個壞主意

00:01:22.880 --> 00:01:26.255
那是我給你的
今日小提示

00:01:26.255 --> 00:01:28.655
但是你可能在想
拜託，克里斯多夫

00:01:28.655 --> 00:01:32.480
每個人都知道這一點
如果你已經知道這一點

00:01:32.480 --> 00:01:34.685
那真是太棒了

00:01:34.685 --> 00:01:39.320
但是如果你去網上搜尋

00:01:39.320 --> 00:01:42.425
你會發現各式各樣的狀況

00:01:42.425 --> 00:01:44.510
金鑰、使用者名稱和密碼

00:01:44.510 --> 00:01:47.810
就直接放在原始碼中

00:01:47.810 --> 00:01:53.910
而且檔案在GitHub上公開分享
全世界都能看到

00:01:53.910 --> 00:01:57.990
這太糟糕了

00:01:57.990 --> 00:02:02.630
當我們處理
任何類型的敏感資料

00:02:02.630 --> 00:02:05.495
我們都要非常小心

00:02:05.495 --> 00:02:09.080
我們需要確保資料

00:02:09.080 --> 00:02:12.790
將適當的受到保護

00:02:12.790 --> 00:02:16.700
特別是它永遠不應該以明碼

00:02:16.700 --> 00:02:20.855
存放在一個會被公開存取的地方

00:02:20.855 --> 00:02:22.980
那麼，我們如何做到這一點呢？

00:02:22.980 --> 00:02:27.280
我們可以使用環境變數

00:02:27.280 --> 00:02:29.395
環境變數可以做到這一點

00:02:29.395 --> 00:02:36.380
我需要先解釋一下甚麼是環境變數

00:02:36.380 --> 00:02:38.345
環境變數不只可以

00:02:38.345 --> 00:02:42.095
儲存密碼和金鑰

00:02:42.095 --> 00:02:46.520
環境變數可以用來儲存

00:02:46.520 --> 00:02:51.080
可能隨執行環境或外在因素不同
而改變的值或不想放在程式碼中的東西

00:02:51.080 --> 00:02:54.170
例如要連接到某個資料庫的時候

00:02:54.170 --> 00:02:57.250
我需要連接該資料庫的連接字串

00:02:57.250 --> 00:02:59.790
如果資料庫換網址
會發生什麼情況？

00:02:59.790 --> 00:03:02.225
如果資料庫改名字了呢？

00:03:02.225 --> 00:03:05.390
我會希望這些值改變時

00:03:05.390 --> 00:03:09.715
我不需要去修改程式

00:03:09.715 --> 00:03:12.620
又或者我可能需要

00:03:12.620 --> 00:03:15.470
讀取作業系統中的某些資訊

00:03:15.470 --> 00:03:18.070
例如當前的資料夾

00:03:18.070 --> 00:03:21.410
或者作業系統的種類和版本

00:03:21.410 --> 00:03:25.290
這些會隨著程式執行的環境而改變
無法直接寫死在程式碼中

00:03:25.290 --> 00:03:28.250
我希望能夠能從
應用程式外部的某個地方

00:03:28.250 --> 00:03:32.345
動態的讀取這些資訊

00:03:32.345 --> 00:03:36.730
這就是環境變數
發揮作用的時候

00:03:36.730 --> 00:03:38.915
你的作業系統

00:03:38.915 --> 00:03:41.150
有一大堆的機環境變數

00:03:41.150 --> 00:03:43.910
它們可能被分成兩種

00:03:43.910 --> 00:03:46.410
系統變數
會被所有使用者所共用

00:03:46.410 --> 00:03:48.350
使用者變數
則只有當前使用者能存取

00:03:48.350 --> 00:03:50.870
根據作業系統不同

00:03:50.870 --> 00:03:54.250
可能也有其他分類

00:03:54.250 --> 00:03:56.500
但不管如何

00:03:56.500 --> 00:04:00.020
讀取環境變數的方法
是一樣的

00:04:00.020 --> 00:04:02.870
我們要做的是

00:04:02.870 --> 00:04:06.805
"import os"
然後使用這個函式庫中的函數

00:04:06.805 --> 00:04:09.185
我們要呼叫其中的輔助函數

00:04:09.185 --> 00:04:11.555
"getenv()"

00:04:11.555 --> 00:04:14.300
然後環境變數名稱

00:04:14.300 --> 00:04:17.770
當作參數

00:04:17.770 --> 00:04:20.745
在這裡我想要知道
作業系統的種類

00:04:20.745 --> 00:04:22.230
當我輸出結果時

00:04:22.230 --> 00:04:27.225
我得到"Windows_NT

00:04:27.225 --> 00:04:31.040
這段程式碼
可以讀取任何已設置過的

00:04:31.040 --> 00:04:35.740
系統或使用者環境變數

00:04:35.740 --> 00:04:38.230
但正如我們前面提到的

00:04:38.230 --> 00:04:40.640
還有其他在應用程式之外的資訊

00:04:40.640 --> 00:04:43.400
我們想要動態的讀取

00:04:43.400 --> 00:04:45.850
那些資料庫連接字串

00:04:45.850 --> 00:04:48.720
那些金鑰、那些密碼

00:04:48.720 --> 00:04:54.125
我們希望能夠保護
那些敏感的資料

00:04:54.125 --> 00:04:56.890
那麼，我們要如何管理這些呢？

00:04:56.890 --> 00:05:01.250
嗯，從技術上講
你可以從命令列指令

00:05:01.250 --> 00:05:03.470
或批次檔中去設定

00:05:03.470 --> 00:05:06.130
那些環境變數

00:05:06.130 --> 00:05:08.810
但就我個人而言
我喜歡的方式是

00:05:08.810 --> 00:05:13.820
是透過檔案".env"
去管理環境變數

00:05:13.820 --> 00:05:17.180
"dotenv"是一個套件

00:05:17.180 --> 00:05:20.450
基本上每種主流的程式語言
應該都有這種套件

00:05:20.450 --> 00:05:21.980
如果你用的是"Node.js"

00:05:21.980 --> 00:05:24.500
如果你用的是"C#"

00:05:24.500 --> 00:05:26.420
或者其他專業的程式語言

00:05:26.420 --> 00:05:30.790
應該都有這個套件可供你使用

00:05:30.790 --> 00:05:35.480
"dotenv"很棒的地方就是
它給你機會

00:05:35.480 --> 00:05:36.860
設置和儲存那些環境變數

00:05:36.860 --> 00:05:41.000
到一個文字檔中

00:05:41.000 --> 00:05:43.595
所以這樣你不需要
把那些資訊寫死在程式碼中

00:05:43.595 --> 00:05:46.010
這樣你就不會把

00:05:46.010 --> 00:05:49.130
這些敏感性資訊分享出去

00:05:49.130 --> 00:05:53.170
當你安裝了"dotenv"套件後

00:05:53.170 --> 00:05:55.820
我們已經學過如何安裝套件

00:05:55.820 --> 00:05:58.760
創建一個".env"檔案

00:05:58.760 --> 00:06:02.240
這個".env"檔案中
沒有別的東西

00:06:02.240 --> 00:06:03.935
只有這樣的鍵值對

00:06:03.935 --> 00:06:08.425
設置你的鍵
然後設置你的值

00:06:08.425 --> 00:06:11.810
然後在程式中

00:06:11.810 --> 00:06:17.725
只要簡單地
"from dotenv import load_dotenv"

00:06:17.725 --> 00:06:22.340
然後在呼叫"os.getenv()"之前
先呼叫"load_dotenv()"

00:06:22.340 --> 00:06:24.305
這樣就能用跟之前一樣的寫法

00:06:24.305 --> 00:06:27.325
來取得環境變數

00:06:27.325 --> 00:06:31.070
有一件事我想在這裡特別強調

00:06:31.070 --> 00:06:34.970
就是"dotenv"非常聰明

00:06:34.970 --> 00:06:37.790
它會看看

00:06:37.790 --> 00:06:41.590
"嘿，這個環境變數
已經存在系統中了嗎？"

00:06:41.590 --> 00:06:44.750
如果是
那麼它會從系統中讀取

00:06:44.750 --> 00:06:49.580
如果不是
那麼它才會去查你的文字檔

00:06:49.580 --> 00:06:51.935
這件事很重要
是因為

00:06:51.935 --> 00:06:54.950
我可能會部署我的應用程式

00:06:54.950 --> 00:06:58.400
到另一台電腦或伺服器

00:06:58.400 --> 00:07:02.815
讓它在那裏執行

00:07:02.815 --> 00:07:07.700
在遠端伺服器上
我要設置那些環境變數

00:07:07.700 --> 00:07:11.060
我要指定我的金鑰

00:07:11.060 --> 00:07:14.210
我的資料庫連接字串等

00:07:14.210 --> 00:07:17.300
但我不會把資訊
放在文字檔中

00:07:17.300 --> 00:07:22.555
我會透過伺服器的設定
來存放這些資訊

00:07:22.555 --> 00:07:26.045
但關於dotenv的程式碼
可以繼續留在這裡

00:07:26.045 --> 00:07:28.955
所以下面這段程式碼

00:07:28.955 --> 00:07:32.285
不需要修改

00:07:32.285 --> 00:07:37.415
就可以放到伺服器上去執行

00:07:37.415 --> 00:07:40.730
而我不會把".env"檔案
部屬到伺服器上去

00:07:40.730 --> 00:07:44.885
".env"僅用於本地

00:07:44.885 --> 00:07:47.105
開發和測試時使用

00:07:47.105 --> 00:07:49.580
當我發佈它到伺服器時

00:07:49.580 --> 00:07:53.165
我要正確設置
我的環境變數

00:07:53.165 --> 00:07:55.730
不用擔心
之後我會演示如何做到這一點

00:07:55.730 --> 00:07:59.285
但我的程式碼
可以保持不變

00:07:59.285 --> 00:08:02.660
"dotenv"一個很大的優勢

00:08:02.660 --> 00:08:04.670
就是開發測試的時候

00:08:04.670 --> 00:08:06.905
我可以在文字檔中
設置一切設定

00:08:06.905 --> 00:08:09.245
然後當我準備好
發佈我的程式時

00:08:09.245 --> 00:08:12.695
不用改寫我的程式

00:08:12.695 --> 00:08:15.620
而正如我之前提到的

00:08:15.620 --> 00:08:17.165
"dotenv"套件

00:08:17.165 --> 00:08:21.700
幾乎每一種程式語言都有

00:08:21.700 --> 00:08:25.319
因此，我們回顧一下這一集的重點

00:08:25.319 --> 00:08:32.785
永遠別把敏感資訊寫進程式碼

00:08:32.785 --> 00:08:36.350
最簡單的解決方法

00:08:36.350 --> 00:08:38.540
就是所有會分享程式碼的專案

00:08:38.540 --> 00:08:41.420
都使用"dotenv"

00:08:41.420 --> 00:08:44.540
然後如果你使用了"dotenv"

00:08:44.540 --> 00:08:47.395
而且使用Git來管理你的程式碼

00:08:47.395 --> 00:08:53.240
要確保你有把".env"檔案
加到到你的“.gitignore"檔案中

00:08:53.240 --> 00:08:55.115
這非常重要

00:08:55.115 --> 00:08:58.235
否則你會把“.env"發佈出去

00:08:58.235 --> 00:09:04.400
如果真正敏感的資料被發佈出去

00:09:04.400 --> 00:09:06.860
對我們應用程式
甚至是公司業務

00:09:06.860 --> 00:09:09.845
將是個大災難

00:09:09.845 --> 00:09:12.560
如果你想要一個

00:09:12.560 --> 00:09:15.625
比“dotenv"更可靠

00:09:15.625 --> 00:09:18.860
的解決方案
在Azure中有一個

00:09:18.860 --> 00:09:20.480
"Azure Key Vault"

00:09:20.480 --> 00:09:22.100
可以提供這樣的功能

00:09:22.100 --> 00:09:24.605
你若有興趣可以去Azure網站了解

00:09:24.605 --> 00:09:26.480
但對大多數程式來說

00:09:26.480 --> 00:09:28.520
"dotenv"的解決方案

00:09:28.520 --> 00:09:30.725
應該已經足夠好了

00:09:30.725 --> 00:09:33.260
相對於把敏感資訊
寫死在程式碼中

00:09:33.260 --> 00:09:37.260
讓我們在下一單元
動手來實作吧

