WEBVTT

00:00:04.670 --> 00:00:08.100
>> 接下來讓我們看看在寫程式時

00:00:08.100 --> 00:00:12.179
可能最常做的一件事

00:00:12.179 --> 00:00:15.180
就是字串處理

00:00:15.180 --> 00:00:18.030
字串處理實際上就是

00:00:18.030 --> 00:00:20.580
從一個變數中取得字串

00:00:20.580 --> 00:00:23.415
經過處理後

00:00:23.415 --> 00:00:26.070
儲存到另一個變數中

00:00:26.070 --> 00:00:27.580
現在我們看一個小範例

00:00:27.580 --> 00:00:29.845
假設你還沒有
很熟悉變數的觀念

00:00:29.845 --> 00:00:33.795
變數有點像
一個儲存空間

00:00:33.795 --> 00:00:38.550
讓你存放數值

00:00:38.550 --> 00:00:39.800
以這個例子來說

00:00:39.800 --> 00:00:43.180
"first_name"這個變數將會儲存
'Christopher'這個字串

00:00:43.180 --> 00:00:45.410
Python有一個跟
其他很多語言很不同之處

00:00:45.410 --> 00:00:48.740
就在於

00:00:48.740 --> 00:00:50.900
不必使用任何形式的
關鍵字或其他東西

00:00:50.900 --> 00:00:54.245
來宣告變數

00:00:54.245 --> 00:00:56.150
你只要給它一個名字

00:00:56.150 --> 00:00:57.830
並將某個值指派給它

00:00:57.830 --> 00:01:02.870
你就創造了一個變數
就是這麼簡單

00:01:02.870 --> 00:01:04.820
你也會注意到我的字串

00:01:04.820 --> 00:01:06.925
右手邊的這個字串

00:01:06.925 --> 00:01:10.285
你會注意到我在這裡
使用單引號

00:01:10.285 --> 00:01:13.820
我們之前提過
你可以使用單引號或雙引號

00:01:13.820 --> 00:01:18.140
都可以，但必須前後一致
你也最好保持自己一致的風格

00:01:18.140 --> 00:01:21.740
就我個人而言
我比較喜歡用單引號

00:01:21.740 --> 00:01:22.940
我只是覺得它讀起來

00:01:22.940 --> 00:01:26.090
比雙引號更順眼

00:01:26.090 --> 00:01:30.740
我其實沒有一個
能說服別人的理由

00:01:30.740 --> 00:01:31.880
我只是覺得它看起來更好

00:01:31.880 --> 00:01:33.410
我就是覺得
單引號比雙引號好

00:01:33.410 --> 00:01:34.790
如果你要使用雙引號

00:01:34.790 --> 00:01:36.545
也完全不會有問題

00:01:36.545 --> 00:01:41.530
只是要記得
保持風格的一致性

00:01:41.530 --> 00:01:45.860
現在
如果你想結合兩個字串

00:01:45.860 --> 00:01:49.250
只要用一個加號
就可以做到這一點

00:01:49.250 --> 00:01:51.230
你會注意到我的程式碼中

00:01:51.230 --> 00:01:53.845
有我的名和姓

00:01:53.845 --> 00:01:56.210
然後你會注意到

00:01:56.210 --> 00:01:58.970
我用了“print"
然後結合名和姓

00:01:58.970 --> 00:02:02.930
只不過用了

00:02:02.930 --> 00:02:07.220
一個小加號

00:02:07.220 --> 00:02:09.690
讓我用筆把它圈起來

00:02:09.690 --> 00:02:12.425
一個加號就能將
兩個變數結合起來

00:02:12.425 --> 00:02:14.820
這個方法適用于
兩個變數之間

00:02:14.820 --> 00:02:17.480
也可以用在字串本身

00:02:17.480 --> 00:02:20.380
所以如果我要把
一個字串'Hello'

00:02:20.380 --> 00:02:24.320
和幾個空格以及
剛才的字串函數串起來

00:02:24.320 --> 00:02:27.005
我一樣也可以
用相同的方法

00:02:27.005 --> 00:02:30.350
完全相同的
加號運算子

00:02:30.350 --> 00:02:34.040
最後要補充一個小提示

00:02:34.040 --> 00:02:37.325
你會注意到我們
變數的命名

00:02:37.325 --> 00:02:39.470
我們用一個單字、底線
然後另一個單字

00:02:39.470 --> 00:02:41.490
給變數命名時

00:02:41.490 --> 00:02:44.735
盡量取優雅而
意義明確的名字

00:02:44.735 --> 00:02:48.814
如果需要多個單字
才能表達

00:02:48.814 --> 00:02:52.475
Python語言的慣例是
用小寫和底線

00:02:52.475 --> 00:02:56.245
就如這個例子

00:02:56.245 --> 00:03:00.030
現在如果要修改字串

00:03:00.030 --> 00:03:01.565
例如把所有字元都變成

00:03:01.565 --> 00:03:04.475
大寫字母或
小寫字母

00:03:04.475 --> 00:03:07.670
或只把
第一個字元變成大寫

00:03:07.670 --> 00:03:12.920
或者要
計算特定字串出現的次數

00:03:12.920 --> 00:03:14.795
在這個例子中
我們找看看'a'出現幾次

00:03:14.795 --> 00:03:19.580
你可以分別使用upper(), lower(),
capitalize(), count()等函數

00:03:19.580 --> 00:03:23.255
在下面你可以看到

00:03:23.255 --> 00:03:28.410
個別函數的執行結果

00:03:28.640 --> 00:03:34.660
最後
如果你想把上面教到的都用上

00:03:34.660 --> 00:03:36.020
你仍然可以用
字串結合的方式

00:03:36.020 --> 00:03:39.890
如同前面提到的

00:03:39.890 --> 00:03:43.985
甚至是從程式之外取值

00:03:43.985 --> 00:03:46.385
例如在這個範例中

00:03:46.385 --> 00:03:49.130
我們讓使用者輸入資訊

00:03:49.130 --> 00:03:52.415
然後存放到
'first_name'這個變數中

00:03:52.415 --> 00:03:55.430
不管使用者輸入的是甚麼

00:03:55.430 --> 00:03:57.500
'last_name'也一樣

00:03:57.500 --> 00:03:59.665
然後把它輸出到螢幕

00:03:59.665 --> 00:04:01.190
然後你會發現

00:04:01.190 --> 00:04:03.560
我們可以用
capitalize()函數把

00:04:03.560 --> 00:04:07.280
一個字串的
頭一個字元變成大寫

00:04:07.280 --> 00:04:09.200
你會注意到結果

00:04:09.200 --> 00:04:11.704
如果如果我用全部大寫
輸入CHRISTOPHER

00:04:11.704 --> 00:04:13.685
HARRISON也全部大寫

00:04:13.685 --> 00:04:15.830
但在輸出時呼叫了capitalize()

00:04:15.830 --> 00:04:18.880
輸出的結果就是這樣
第一個字元是大寫之後則變成小寫

00:04:18.880 --> 00:04:23.210
好的，目前我們學到了

00:04:23.210 --> 00:04:28.265
一些Python
整理、處理字串的方法

00:04:28.265 --> 00:04:30.210
接下來我們將

00:04:30.210 --> 00:04:32.105
繼續往這個範例
加一些東西

00:04:32.105 --> 00:04:34.700
看看字串處理

00:04:34.700 --> 00:04:40.140
還有哪些進階的
方法和設定

