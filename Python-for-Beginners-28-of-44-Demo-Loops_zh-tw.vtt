WEBVTT

00:00:04.070 --> 00:00:08.145
>> 讓我們看看如何使用
"for"迴圈和"while"迴圈。

00:00:08.145 --> 00:00:11.940
在接下來的演示中

00:00:11.940 --> 00:00:15.900
我會分別用兩種迴圈

00:00:15.900 --> 00:00:17.760
但試圖輸出一樣的結果

00:00:17.760 --> 00:00:20.055
讓你可以從中比較
兩種迴圈的差異

00:00:20.055 --> 00:00:22.585
好，讓我們從"for"迴圈開始

00:00:22.585 --> 00:00:24.810
我們會先說"for"，然後

00:00:24.810 --> 00:00:28.695
"name in"，然後是"people:"

00:00:28.695 --> 00:00:31.575
順便說一下

00:00:31.575 --> 00:00:33.030
當我打出"for"後

00:00:33.030 --> 00:00:36.020
VS Code的自動完成功能
就會提示你可以插入程式碼片段

00:00:36.020 --> 00:00:38.365
所以如果我在這裡敲"Tab"鍵

00:00:38.365 --> 00:00:41.270
它就會幫我按照“for"的語法

00:00:41.270 --> 00:00:42.920
插入程式碼片段

00:00:42.920 --> 00:00:45.865
我只要更改變數名稱

00:00:45.865 --> 00:00:48.890
然後把"pass"改成

00:00:48.890 --> 00:00:52.270
"print"，然後變數名稱

00:00:52.270 --> 00:00:57.810
酷，然後執行程式

00:00:57.810 --> 00:01:04.065
"python demos.py"

00:01:04.065 --> 00:01:06.680
我收到一條錯誤訊息

00:01:06.680 --> 00:01:08.855
喔，因為我的"people"拼錯了

00:01:08.855 --> 00:01:10.220
沒關係

00:01:10.220 --> 00:01:11.570
讓我們解決這個問題

00:01:11.570 --> 00:01:13.140
我應該要注意到
那個綠色的毛毛蟲底線

00:01:13.140 --> 00:01:14.660
現在你會看到

00:01:14.660 --> 00:01:16.240
螢幕輸出
克里斯多夫和蘇珊

00:01:16.240 --> 00:01:18.710
讓我在前後都多印一行空白行

00:01:18.710 --> 00:01:20.885
這樣可以讓輸出的結果

00:01:20.885 --> 00:01:26.205
更容易閱讀

00:01:26.205 --> 00:01:29.570
克里斯多夫
還有蘇珊

00:01:29.570 --> 00:01:32.960
好，現在如果我不用"for"迴圈

00:01:32.960 --> 00:01:35.630
我先把"for"迴圈的程式碼
註解掉

00:01:35.630 --> 00:01:38.465
而要改用"while"迴圈
它看起來會是這樣

00:01:38.465 --> 00:01:40.525
我要說“index = 0"

00:01:40.525 --> 00:01:42.600
它需要一個計數器

00:01:42.600 --> 00:01:47.615
然後

00:01:47.615 --> 00:01:53.320
"while index < len(people):"

00:01:53.320 --> 00:01:55.290
當我寫一個"while"迴圈

00:01:55.290 --> 00:01:56.799
我喜歡馬上

00:01:56.799 --> 00:01:59.120
就先寫

00:01:59.120 --> 00:02:01.580
改變迴圈執行條件的程式碼

00:02:01.580 --> 00:02:06.505
所以我先寫：
"index = index + 1"

00:02:06.505 --> 00:02:08.865
然後再回頭來寫
迴圈中要做的事

00:02:08.865 --> 00:02:10.845
"print(people[index])"

00:02:10.845 --> 00:02:12.719
"print(people[index])"

00:02:12.719 --> 00:02:15.520
"print(people[index])"

00:02:15.520 --> 00:02:19.925
酷，這些就是我全部的程式碼

00:02:19.925 --> 00:02:22.235
執行看看

00:02:22.235 --> 00:02:24.620
你會發現

00:02:24.620 --> 00:02:28.540
完全一樣的輸出結果
克里斯多夫和蘇珊

00:02:28.540 --> 00:02:31.890
從結果來看

00:02:31.890 --> 00:02:36.140
"for"迴圈跟"while"迴圈
做的事情完全一樣

00:02:36.140 --> 00:02:38.105
讓我取消這些註解

00:02:38.105 --> 00:02:39.290
好了

00:02:39.290 --> 00:02:41.480
他們就是做同樣的事情

00:02:41.480 --> 00:02:43.355
就像我一開始說的

00:02:43.355 --> 00:02:45.905
你可以選任一種

00:02:45.905 --> 00:02:47.105
對於類似這樣的情況

00:02:47.105 --> 00:02:50.450
我個人更喜歡
使用"for"迴圈

00:02:50.450 --> 00:02:54.385
因為我怕我會忘記
去改變“while"迴圈的執行條件

00:02:54.385 --> 00:02:56.420
所以我才總是馬上先寫
改變判斷依據的那一行

00:02:56.420 --> 00:02:59.165
否則我真的會忘記

00:02:59.165 --> 00:03:01.340
好的，以上就是Python的

00:03:01.340 --> 00:03:04.740
"for"迴圈和"while"迴圈

