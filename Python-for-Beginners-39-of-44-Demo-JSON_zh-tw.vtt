WEBVTT

00:00:05.240 --> 00:00:09.450
>> 好的。當我們完成了關於API的課程

00:00:09.450 --> 00:00:12.840
我們成功地呼叫
"analyze image" API

00:00:12.840 --> 00:00:14.010
我們上傳了一張北極熊的照片

00:00:14.010 --> 00:00:16.200
而它返回了JSON資料

00:00:16.200 --> 00:00:19.290
這是我們之前看過的程式碼

00:00:19.290 --> 00:00:23.505
跟之前相同的程式碼
當我們運行這個程式

00:00:23.505 --> 00:00:25.380
結果在下面

00:00:25.380 --> 00:00:29.040
它返回了JSON

00:00:29.040 --> 00:00:31.215
自動格式化後
看起來像這樣

00:00:31.215 --> 00:00:33.690
我現在想做的是
加一段程式碼

00:00:33.690 --> 00:00:36.675
讓我取得返回的資料中的一個值

00:00:36.675 --> 00:00:38.880
讓我們從最簡單的
鍵值對開始

00:00:38.880 --> 00:00:40.310
所以這裡有一個非常簡單的鍵值對

00:00:40.310 --> 00:00:43.025
"requestId"

00:00:43.025 --> 00:00:45.380
所以我想添加一行程式碼

00:00:45.380 --> 00:00:48.425
讓它只返回"requestId"的值

00:00:48.425 --> 00:00:50.950
所以我們來到程式的最後

00:00:50.950 --> 00:00:53.605
目前的寫法是

00:00:53.605 --> 00:00:58.975
直接輸出"json.dumps()"的結果

00:00:58.975 --> 00:01:02.300
順便一說，我在前面有先
"import json"

00:01:02.300 --> 00:01:04.310
所以我可以用
"json.dumps()"

00:01:04.310 --> 00:01:06.710
然後直接把結果輸出到螢幕

00:01:06.710 --> 00:01:10.580
但如果我想要的只是其中某個值

00:01:10.580 --> 00:01:12.560
我可以用這種寫法：

00:01:12.560 --> 00:01:14.810
results['requestId']

00:01:14.810 --> 00:01:16.820
"results"是一個變數

00:01:16.820 --> 00:01:20.825
來自於"response.json()"的結果

00:01:20.825 --> 00:01:24.455
而"response"則是

00:01:24.455 --> 00:01:28.310
呼叫API所傳回的回應

00:01:28.310 --> 00:01:36.155
"response = requests.post(...)"

00:01:36.155 --> 00:01:37.820
這行就是從傳遞資料給Web Service

00:01:37.820 --> 00:01:40.040
然後取得回傳值存到"response"中

00:01:40.040 --> 00:01:43.370
然後在轉換成JSON的格式
儲存在"results"中

00:01:43.370 --> 00:01:48.030
若要從"results"取得特定的值

00:01:48.030 --> 00:01:50.390
則可以用
results['requestId']

00:01:50.390 --> 00:01:51.740
我保留了輸出完整JSON的程式碼

00:01:51.740 --> 00:01:53.600
因為這樣比較方便除錯

00:01:53.600 --> 00:01:57.095
好的

00:01:57.095 --> 00:01:59.405
現在讓我們執行程式

00:01:59.405 --> 00:02:06.690
"python read_key_pair.py"
它應該先顯示整個JSON

00:02:06.690 --> 00:02:09.635
然後再另外單獨顯示
"requestId"的值

00:02:09.635 --> 00:02:12.140
所以在這裡你可以看到
完整的JSON字串

00:02:12.140 --> 00:02:14.660
我之後會把它複製和貼上
到JSONLint網站做自動格式化

00:02:14.660 --> 00:02:17.300
然後你可以看到"requestId"的值

00:02:17.300 --> 00:02:20.825
值是個長字串在這裡

00:02:20.825 --> 00:02:22.505
跟JSON裡面的值一樣

00:02:22.505 --> 00:02:27.085
所以我可以從JSON中
單獨提取一個鍵值對

00:02:27.085 --> 00:02:29.820
那如果我想提取子鍵
該怎麼辦？

00:02:29.820 --> 00:02:33.770
例如這些顏色

00:02:33.770 --> 00:02:35.960
我想要提取某個子鍵的值

00:02:35.960 --> 00:02:39.335
"dominatColors", 
"dominatColorForeground"等等

00:02:39.335 --> 00:02:41.780
一樣的

00:02:41.780 --> 00:02:43.790
我只需要

00:02:43.790 --> 00:02:45.590
在['color']之後

00:02:45.590 --> 00:02:47.750
指定['dominatColorBackground']

00:02:47.750 --> 00:02:50.210
它就會返回該值

00:02:50.210 --> 00:02:53.660
所以我唯一改變的

00:02:53.660 --> 00:02:55.280
只有這一行程式碼

00:02:55.280 --> 00:02:57.575
改成
['color']['dominatColorBackground']

00:02:57.575 --> 00:03:01.040
所以如果我執行程式

00:03:01.040 --> 00:03:03.290
"python read_subkey.py"

00:03:03.290 --> 00:03:05.990
順便說一下，所有這些檔案
都在GitHub存儲庫中

00:03:05.990 --> 00:03:08.285
這樣你就可以下載下來

00:03:08.285 --> 00:03:11.250
自己試著執行看看

00:03:11.250 --> 00:03:13.340
好，你會看到完整的JSON

00:03:13.340 --> 00:03:15.725
然後你會看到

00:03:15.725 --> 00:03:17.480
一個特定的顏色

00:03:17.480 --> 00:03:20.750
"dominatColorBackground"

00:03:20.750 --> 00:03:22.345
白色

00:03:22.345 --> 00:03:26.595
我的程式碼已成功提取
JSON中的一個值

00:03:26.595 --> 00:03:29.260
好，如果你的值是一個清單

00:03:29.260 --> 00:03:32.780
我們之前談論過
例如這個"tags"

00:03:32.780 --> 00:03:33.980
標註圖片中有甚麼

00:03:33.980 --> 00:03:35.720
它返回一個清單
裡面有多個不同的標籤

00:03:35.720 --> 00:03:37.160
標註圖片中被辨識出來的東西

00:03:37.160 --> 00:03:39.485
如果我想傳回完整名單呢？

00:03:39.485 --> 00:03:42.230
那麼，我需要做的

00:03:42.230 --> 00:03:45.335
就是呼叫Web Service、
把JSON儲存在"results"變數中

00:03:45.335 --> 00:03:47.660
然後我有兩個選擇

00:03:47.660 --> 00:03:50.060
我可以寫一個for迴圈

00:03:50.060 --> 00:03:52.925
把"results"中的每個標籤

00:03:52.925 --> 00:03:56.590
輸出到螢幕上，或者

00:03:56.590 --> 00:03:58.415
只提取索引值0

00:03:58.415 --> 00:04:01.700
索引值1或
索引值2等等

00:04:01.700 --> 00:04:04.290
這次我只提取頭一個項目

00:04:05.380 --> 00:04:16.040
所以現在我執行
"python read_key_pair_list.py"

00:04:16.040 --> 00:04:17.260
我會把下面的
Terminal視窗拉大一點

00:04:17.260 --> 00:04:18.895
這樣你就可以
看到所有輸出

00:04:18.895 --> 00:04:22.000
你可以看到完整的
JSON被輸出到螢幕

00:04:22.000 --> 00:04:24.040
以及所有的標籤

00:04:24.040 --> 00:04:26.860
我們可以比較
看看JSON中原始的格式是怎樣

00:04:26.860 --> 00:04:30.190
你還可以看到第一個標籤
"熊"在最後被顯示在螢幕上

00:04:30.190 --> 00:04:33.755
"熊"確實是第一個標籤

00:04:33.755 --> 00:04:35.940
好的，這些範例

00:04:35.940 --> 00:04:37.515
建議你要實際執行一次

00:04:37.515 --> 00:04:39.555
實際去呼叫API

00:04:39.555 --> 00:04:40.900
試著從JSON的各個地方

00:04:40.900 --> 00:04:43.130
提取不同的值

00:04:43.130 --> 00:04:44.860
關於JSON更詳細的資訊

00:04:44.860 --> 00:04:46.450
在網路上有很多範例

00:04:46.450 --> 00:04:49.265
以及很多很棒的教程

00:04:49.265 --> 00:04:53.205
好，如果我需要
從我的程式中創建JSON呢？

00:04:53.205 --> 00:04:56.170
我說個了
字典也具有鍵值對

00:04:56.170 --> 00:04:57.460
因此我們可以創建
一個Python的字典

00:04:57.460 --> 00:05:00.070
然後轉換成JSON

00:05:00.070 --> 00:05:02.635
所以我創建一個字典物件

00:05:02.635 --> 00:05:04.620
這個語法我們在介紹"集合"時用過

00:05:04.620 --> 00:05:08.740
我有一個鍵值對
{'first': 'Christopher'}

00:05:08.740 --> 00:05:10.810
另一個鍵值對
{'last', 'Harrison}}

00:05:10.810 --> 00:05:12.910
如果有需要，我可以添加另一個鍵值對

00:05:12.910 --> 00:05:15.310
有可能這個鍵值對是
程式開始執行後

00:05:15.310 --> 00:05:17.710
才動態的從
某個檔案讀取來的

00:05:17.710 --> 00:05:20.560
一旦我取得了
所有必要的值

00:05:20.560 --> 00:05:24.495
我可以呼叫
"json.dumps()"函數

00:05:24.495 --> 00:05:26.440
將字典物件

00:05:26.440 --> 00:05:29.155
轉換為JSON物件

00:05:29.155 --> 00:05:31.300
好，執行程式後

00:05:31.300 --> 00:05:35.360
你會看到

00:05:35.360 --> 00:05:37.880
從字典轉換成的JSON物件

00:05:37.880 --> 00:05:41.060
"python create_json_from_dict.py"

00:05:41.060 --> 00:05:45.740
輸出的結果就是這樣

00:05:45.740 --> 00:05:50.620
你可以看到我成功了
輸出了JSON的格式

00:05:51.170 --> 00:05:54.090
那只是最簡單的鍵值對

00:05:54.090 --> 00:05:57.049
而如果是具有子值的子鍵

00:05:57.049 --> 00:06:00.095
你必須把字典放到字典裡面

00:06:00.095 --> 00:06:02.555
所以我就說：嘿，

00:06:02.555 --> 00:06:06.685
讓我們創建一個"staff_dict"字典

00:06:06.685 --> 00:06:14.290
並指派一個人到
專案經理的職位

00:06:14.290 --> 00:06:16.550
所以我在這裡所做的是

00:06:16.550 --> 00:06:19.520
我已經有一個"person_dict"字典
然後我創建另一個"staff_dict"字典

00:06:19.520 --> 00:06:21.095
然後新增"Program Manager"鍵

00:06:21.095 --> 00:06:23.420
然後把"person_dict"當做值

00:06:23.420 --> 00:06:26.510
所以現在我有一個字典
在另一個字典中

00:06:26.510 --> 00:06:29.690
然後我使用相同的函數
把它轉換成JSON

00:06:29.690 --> 00:06:31.910
把字典中的字典

00:06:31.910 --> 00:06:34.405
轉換為鍵和子鍵

00:06:34.405 --> 00:06:36.390
所以我執行

00:06:36.390 --> 00:06:42.495
"python create_json_with_nested_dict.py"

00:06:42.495 --> 00:06:47.430
你可以看到些子鍵

00:06:47.430 --> 00:06:49.320
這裡是"Program Manager"的鍵

00:06:49.320 --> 00:06:50.460
而其值為

00:06:50.460 --> 00:06:52.905
另一個鍵值對

00:06:52.905 --> 00:06:55.590
最後再來講清單的狀況

00:06:55.590 --> 00:06:57.540
讓"tags"也變成JSON

00:06:57.540 --> 00:06:59.630
把清單物件

00:06:59.630 --> 00:07:01.625
變成JSON

00:07:01.625 --> 00:07:04.100
這裡一樣創建一個字典

00:07:04.100 --> 00:07:06.590
然後我所做的是

00:07:06.590 --> 00:07:08.960
創建一個清單物件

00:07:08.960 --> 00:07:10.190
將該清單指定為

00:07:10.190 --> 00:07:12.290
字典中一個鍵的值

00:07:12.290 --> 00:07:15.680
所以當我添加"languages"鍵
到我的"person_dict"字典

00:07:15.680 --> 00:07:17.645
我把整個清單當作值

00:07:17.645 --> 00:07:20.255
然後轉換成JSON物件

00:07:20.255 --> 00:07:23.070
當我輸出到螢幕時

00:07:28.130 --> 00:07:31.430
你可以看到
它成功創建了

00:07:31.430 --> 00:07:34.190
"languages"鍵

00:07:34.190 --> 00:07:37.750
而其值是一個完整的清單

00:07:37.750 --> 00:07:39.850
這可能很容易讓人困惑

00:07:39.850 --> 00:07:41.210
所以你必須練習它

00:07:41.210 --> 00:07:43.525
我真的推薦你

00:07:43.525 --> 00:07:45.360
去GitHub下載此範例程式

00:07:45.360 --> 00:07:46.980
嘗試創建不同的結構

00:07:46.980 --> 00:07:49.720
從JSON資料中
練習提取不同的值

00:07:49.720 --> 00:07:51.695
唯有透過練習才有可能學會

00:07:51.695 --> 00:07:55.355
現在你已經有能力
能解析這些API的回傳值

00:07:55.355 --> 00:07:57.860
所以世界已經為你打開

00:07:57.860 --> 00:07:59.780
而克里斯多夫在下一單元

00:07:59.780 --> 00:08:02.700
還能教你更多使用API的技巧

