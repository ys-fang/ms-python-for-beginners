WEBVTT

00:00:04.460 --> 00:00:07.140
>> 好的，讓我們來看看

00:00:07.140 --> 00:00:09.600
在程式中實際是如何運作的

00:00:09.600 --> 00:00:11.220
在這個範例中

00:00:11.220 --> 00:00:12.930
我們必須計算

00:00:12.930 --> 00:00:15.765
加拿大境內不同省份
的不同稅率

00:00:15.765 --> 00:00:18.780
所以我基本上要問
使用者位於那個省

00:00:18.780 --> 00:00:21.000
一般的購物網站
也是這麼做的

00:00:21.000 --> 00:00:22.500
當使用者在網站上
買東西時

00:00:22.500 --> 00:00:24.870
會先讓使用者選擇
他們住在哪一省

00:00:24.870 --> 00:00:27.720
預設的稅率是零

00:00:27.720 --> 00:00:30.570
然後我說：
"嗯，基於你輸入的省份"

00:00:30.570 --> 00:00:32.490
"你應扣得稅是多少"

00:00:32.490 --> 00:00:34.920
然後把稅輸出到螢幕上

00:00:34.920 --> 00:00:36.330
"print(tax)"的目的

00:00:36.330 --> 00:00:37.950
是為了除錯

00:00:37.950 --> 00:00:40.290
為了確定稅率計算
的結果是正確的

00:00:40.290 --> 00:00:42.215
所以當我執行這個程式時

00:00:42.215 --> 00:00:50.080
"python multiple_if_statements.py"

00:00:50.120 --> 00:00:53.100
程式會問我
"你住在哪一個省？"

00:00:53.100 --> 00:00:54.780
我剛好住在安大略省

00:00:54.780 --> 00:00:56.775
所以我輸入安大略

00:00:56.775 --> 00:00:59.670
它輸出 13%

00:00:59.670 --> 00:01:00.975
如果我回頭檢查我的程式碼

00:01:00.975 --> 00:01:02.270
是的，這是正確的

00:01:02.270 --> 00:01:06.680
程式得到輸入值相等於安大略後
將稅率指派為 13%

00:01:06.680 --> 00:01:10.010
現在這個寫法
每個"if"都會個別做一次判斷

00:01:10.010 --> 00:01:12.110
但在這個範例中
省份只可能是其中一個

00:01:12.110 --> 00:01:14.780
"province"變數不可能
同時等於多個省份名稱

00:01:14.780 --> 00:01:17.845
所以可以"elif"
把他改寫的更優雅一點

00:01:17.845 --> 00:01:20.410
只要把"if"改成"elif"

00:01:20.410 --> 00:01:22.745
如果不是艾伯塔省

00:01:22.745 --> 00:01:23.945
才檢查是不是紐納武特省

00:01:23.945 --> 00:01:26.405
如果又不是紐納武特省
才檢查是不是安大略省

00:01:26.405 --> 00:01:28.430
這樣就把單獨分開
三個的"if"

00:01:28.430 --> 00:01:30.590
變成只有一個"if"

00:01:30.590 --> 00:01:32.105
但能查核不同的條件
(譯註：這樣可能可以減少檢查的次數)

00:01:32.105 --> 00:01:33.740
當我執行它時

00:01:33.740 --> 00:01:35.900
一樣的
我住在哪個省？

00:01:35.900 --> 00:01:38.675
這次我們輸入紐納武特省

00:01:38.675 --> 00:01:40.975
做一點不同的嘗試

00:01:40.975 --> 00:01:43.620
它返回
百分之五

00:01:43.620 --> 00:01:45.330
我們看一看程式碼

00:01:45.330 --> 00:01:47.835
確實，紐納武特省應該要
回傳稅率為百分之五

00:01:47.835 --> 00:01:49.730
再說一次，
這裡的"print"述句

00:01:49.730 --> 00:01:52.055
只是幫助我們
確認結果是否正確

00:01:52.055 --> 00:01:54.230
好，目前為止
一切都很好

00:01:54.230 --> 00:01:57.800
但如果我想說
我住的地方不是這幾個省呢？

00:01:57.800 --> 00:02:01.920
解設我住在
魁北克省

00:02:01.920 --> 00:02:03.180
這是一個完全
不同的省份

00:02:03.180 --> 00:02:04.400
再次執行程式

00:02:04.400 --> 00:02:05.795
我輸入魁北克省

00:02:05.795 --> 00:02:08.270
它輸出稅率為零

00:02:08.270 --> 00:02:10.985
但這是不對的

00:02:10.985 --> 00:02:12.830
所以我意識到
我需要說

00:02:12.830 --> 00:02:15.870
"如果他們在任何
其他省份"

00:02:16.040 --> 00:02:18.780
讓我們添加一個"else:"述句

00:02:18.780 --> 00:02:22.940
如果是其他省份
就把稅率設為 15%

00:02:22.940 --> 00:02:24.770
雖然它事實上不太準確

00:02:24.770 --> 00:02:27.950
但這只是個程式範例
我們就先當作是這樣

00:02:27.950 --> 00:02:30.740
所以現在，我執行我的程式

00:02:30.740 --> 00:02:32.090
我先清除螢幕

00:02:32.090 --> 00:02:34.610
這樣你能看得更清楚一點

00:02:34.610 --> 00:02:37.675
現在，當我執行它
如果我輸入魁北克

00:02:37.675 --> 00:02:40.545
它會返回 15%

00:02:40.545 --> 00:02:42.320
這就是如何使用
一個"if"述句

00:02:42.320 --> 00:02:44.255
來判斷多個條件

00:02:44.255 --> 00:02:46.220
藉由運用"else:"
以及"elif:"

00:02:46.220 --> 00:02:48.455
這樣讓程式碼
看起來更加優雅

00:02:48.455 --> 00:02:51.595
但還有更多
可以改進的地方

00:02:51.595 --> 00:02:53.885
我能做的就是
我說："等一下"

00:02:53.885 --> 00:02:57.590
"艾伯塔省和紐納武特省
的稅率是一樣的"

00:02:57.590 --> 00:03:00.230
所以也許我可以把
這兩者整合成一個條件

00:03:00.230 --> 00:03:02.195
我可以使用
"or"述句

00:03:02.195 --> 00:03:04.130
因為我可以說，如果省份為

00:03:04.130 --> 00:03:07.750
艾伯塔省或
紐納武特省

00:03:07.750 --> 00:03:10.900
我可以改寫成這樣

00:03:10.900 --> 00:03:13.540
只要其中之一成立

00:03:13.540 --> 00:03:15.800
別忘了你的冒號

00:03:15.800 --> 00:03:19.160
然後稅率設為 0.05

00:03:19.160 --> 00:03:21.140
同樣的邏輯

00:03:21.140 --> 00:03:23.280
只是一種用
不同的方式去表達它

00:03:23.280 --> 00:03:25.160
所以當我再次執行的時候

00:03:25.160 --> 00:03:28.325
如果我輸入安大略省
我們只是測試一下

00:03:28.325 --> 00:03:30.590
成功輸出 13%

00:03:30.590 --> 00:03:32.905
讓我們用艾伯塔省
來測試一下

00:03:32.905 --> 00:03:34.665
是的，百分之五

00:03:34.665 --> 00:03:37.450
讓我們用紐納武特省
來測試一下

00:03:37.790 --> 00:03:40.200
沒錯，也是百分之五

00:03:40.200 --> 00:03:42.115
讓我們用魁北克省
來測試一下

00:03:42.115 --> 00:03:44.420
它正確返回 15%

00:03:44.420 --> 00:03:46.310
順便說一下克里斯多夫
在例外處理的章節

00:03:46.310 --> 00:03:48.575
曾提到單元測試

00:03:48.575 --> 00:03:50.060
請謹記在心

00:03:50.060 --> 00:03:51.140
當你使用"if"述句時

00:03:51.140 --> 00:03:53.195
你必須非常小心

00:03:53.195 --> 00:03:54.860
要確保所有的可能性
都有被測試盜

00:03:54.860 --> 00:03:57.950
因為你可能會發現
四種可能中的三個沒問題

00:03:57.950 --> 00:03:59.365
但第四個就產生
非預期的結果

00:03:59.365 --> 00:04:02.330
這就是大部分Bug
產生的原因

00:04:02.330 --> 00:04:05.730
所以永遠要測試
所有可能的條件

00:04:06.350 --> 00:04:08.795
在這個範例中

00:04:08.795 --> 00:04:12.335
我有兩個不同的省份
它返回相同的輸出

00:04:12.335 --> 00:04:15.180
但他們實際上
檢查相同的值

00:04:15.180 --> 00:04:17.800
他們都檢查
"province"變數的值


00:04:17.800 --> 00:04:19.450
所以你可以做的一件事就是

00:04:19.450 --> 00:04:21.870
將該"or"述句替換為"in"

00:04:21.870 --> 00:04:23.475
這讓你可以說：

00:04:23.475 --> 00:04:27.385
"如果"province"的值等於
此清單中的任何一個值

00:04:27.385 --> 00:04:30.010
就把稅率定在百分之五

00:04:30.010 --> 00:04:32.580
而你甚至可以再清單中

00:04:32.580 --> 00:04:34.615
添加四個、五個、六個、七個的值

00:04:34.615 --> 00:04:37.180
當然你也可以
只放兩個值在清單中

00:04:37.180 --> 00:04:39.610
但我意識到育空省
也是相同的稅率

00:04:39.610 --> 00:04:42.145
所以我就在清單中
加了育空省

00:04:42.145 --> 00:04:47.385
所以現在如果我重新執行程式
我輸入育空

00:04:47.385 --> 00:04:49.250
它返回百分之五

00:04:49.250 --> 00:04:55.560
如果我輸入艾伯塔省
百分之五

00:04:55.560 --> 00:04:58.755
然後讓我們測試紐納武特省

00:04:58.755 --> 00:05:00.670
因為我還沒有測試過

00:05:00.670 --> 00:05:03.700
輸入紐納武特省
百分之五

00:05:03.700 --> 00:05:06.895
然後我測試安大略省
確保結果是正確的

00:05:06.895 --> 00:05:09.340
然後我測試新斯科舍省

00:05:09.340 --> 00:05:11.940
它沒有被寫在程式中
所以就是 15%

00:05:11.940 --> 00:05:13.255
所以使用"in"

00:05:13.255 --> 00:05:15.505
它也一樣正常運作

00:05:15.505 --> 00:05:19.885
所以我基本上只是用
四種不同的寫法來寫相同的邏輯

00:05:19.885 --> 00:05:21.415
用"in"是我最喜歡的一種

00:05:21.415 --> 00:05:22.765
它是最乾淨的

00:05:22.765 --> 00:05:24.490
但這四種都同樣
可以正常運作

00:05:24.490 --> 00:05:25.960
你可以選擇自己喜歡的寫法

00:05:25.960 --> 00:05:28.600
但要確保你測試過
每一種可能的條件

00:05:28.600 --> 00:05:31.485
最後還只有一種情況

00:05:31.485 --> 00:05:32.750
有一個使用者從國外

00:05:32.750 --> 00:05:34.970
訂購我的網站上的東西

00:05:34.970 --> 00:05:36.395
如果你不是加拿大人

00:05:36.395 --> 00:05:38.260
我們不收取你
加拿大的稅

00:05:38.260 --> 00:05:40.340
所以這裡

00:05:40.340 --> 00:05:42.170
我要用到巢狀"if"述句

00:05:42.170 --> 00:05:44.135
我會先問
你住在什麼國家？

00:05:44.135 --> 00:05:45.500
如果你不在加拿大

00:05:45.500 --> 00:05:47.420
那我們就不扣稅了

00:05:47.420 --> 00:05:49.190
所以你會看到在這裡
我有一個"if"述句

00:05:49.190 --> 00:05:50.600
如果國家是加拿大

00:05:50.600 --> 00:05:53.150
然後才執行
下面這些複雜的邏輯

00:05:53.150 --> 00:05:55.730
來計算各省的不同稅率

00:05:55.730 --> 00:05:57.590
只有加拿大人

00:05:57.590 --> 00:05:59.405
才需要問他們來自哪一省

00:05:59.405 --> 00:06:01.810
否則將稅率設為零

00:06:01.810 --> 00:06:03.485
因為如果
你是外國人

00:06:03.485 --> 00:06:05.575
你可以不用付這些稅

00:06:05.575 --> 00:06:08.300
既然我們不需要知道

00:06:08.300 --> 00:06:10.580
非加拿大人住在哪一省

00:06:10.580 --> 00:06:14.105
所以我應該移動這一行

00:06:14.105 --> 00:06:15.890
所以如果
你是加拿大人

00:06:15.890 --> 00:06:18.200
然後我會問你
你住在什麼省

00:06:18.200 --> 00:06:20.990
然後評估我應該
向你收多少稅率

00:06:20.990 --> 00:06:22.070
但是如果你
不是加拿大人

00:06:22.070 --> 00:06:23.480
我就不用問你住哪一省

00:06:23.480 --> 00:06:26.005
甚至也不是每個國家
都用省來劃分行政區

00:06:26.005 --> 00:06:32.760
所以現在我重新執行程式

00:06:36.830 --> 00:06:41.690
"python nested_if.py"

00:06:41.690 --> 00:06:44.120
我住的是什麼國家？
我輸入：加拿大

00:06:44.120 --> 00:06:46.310
我住在哪一省？

00:06:46.310 --> 00:06:49.465
喔喔，來了，因為我輸入
這個國家是加拿大

00:06:49.465 --> 00:06:50.970
當"if"述句得知

00:06:50.970 --> 00:06:52.310
你住在加拿大

00:06:52.310 --> 00:06:54.635
它就得問你住在哪個省

00:06:54.635 --> 00:06:57.455
所以我說：
"好吧，我住在安大略省"

00:06:57.455 --> 00:06:59.720
然後它輸出
說稅率是 13%

00:06:59.720 --> 00:07:02.275
這是正確的

00:07:02.275 --> 00:07:04.580
接下來我還需要
測試別的情況

00:07:04.580 --> 00:07:07.770
假如我說我住在英國

00:07:09.800 --> 00:07:12.300
它輸出零

00:07:12.300 --> 00:07:14.365
很棒，這是我預期的稅率

00:07:14.365 --> 00:07:18.410
於是我再次測試
我說我住在加拿大(canada)

00:07:18.410 --> 00:07:22.105
它回傳零
而且沒有問我住哪一省

00:07:22.105 --> 00:07:23.840
我才正想要測試

00:07:23.840 --> 00:07:27.725
育空和艾伯塔省
卻在這裡就出錯了

00:07:27.725 --> 00:07:30.965
這是一個執行期錯誤
我們需要除錯

00:07:30.965 --> 00:07:32.750
回想一下上一集的內容

00:07:32.750 --> 00:07:34.325
當我比對字串時

00:07:34.325 --> 00:07:40.880
我必須確保它
不區分大小寫

00:07:40.880 --> 00:07:42.620
可以用"lower()"函數
解決這個問題

00:07:42.620 --> 00:07:44.810
當我意識到
我的程式碼有點問題

00:07:44.810 --> 00:07:47.525
我應該把它寫得
更周全一點

00:07:47.525 --> 00:07:49.895
轉換使用者輸入的字串
為全部小寫

00:07:49.895 --> 00:07:51.710
再以小寫的字串
做字串比對

00:07:51.710 --> 00:07:54.320
比對各省名稱時
也應該做一樣的處理

00:07:54.320 --> 00:07:57.325
不過讓我們先來看看
這樣修改有沒有解決問題

00:07:57.325 --> 00:07:59.275
現在我輸入加拿大

00:07:59.275 --> 00:08:01.390
我現在故意輸入
全部大寫的CANADA

00:08:01.390 --> 00:08:02.600
好的，這次成功了

00:08:02.600 --> 00:08:04.610
它現在知道
我輸入的是加拿大

00:08:04.610 --> 00:08:08.285
我現在可以輸入一個省
並獲得正確的稅率

00:08:08.285 --> 00:08:10.400
因此，問題被解決了

00:08:10.400 --> 00:08:11.510
好的，這一集我們介紹了

00:08:11.510 --> 00:08:13.055
用巢狀"if"來解決複雜的條件判斷

00:08:13.055 --> 00:08:16.310
在接下來的課程，我還有一些
使用"if"的技巧可以告訴你

00:08:16.310 --> 00:08:18.500
最後再提醒一次：
使用"if"述句

00:08:18.500 --> 00:08:21.870
一定要小心的測試
所有可能的結果

