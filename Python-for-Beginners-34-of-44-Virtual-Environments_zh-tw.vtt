WEBVTT

00:00:04.040 --> 00:00:09.450
>> 讓我們來談談安裝套件
所帶來的影響

00:00:09.450 --> 00:00:12.150
看看我們在上一集
用的投影片

00:00:12.150 --> 00:00:16.290
我的標記還在上面

00:00:16.290 --> 00:00:18.735
我們安裝套件的方式

00:00:18.735 --> 00:00:21.465
就是"pip install"
然後套件名稱

00:00:21.465 --> 00:00:25.365
而之後會發生甚麼呢？

00:00:25.365 --> 00:00:29.820
它會在「全域範圍」內
安裝套件

00:00:29.820 --> 00:00:34.350
這是一件好事
但有時候會是件壞事

00:00:34.350 --> 00:00:37.820
在「全域範圍」內安裝套件

00:00:37.820 --> 00:00:39.020
意味著你創建的
每一個應用程式

00:00:39.020 --> 00:00:41.615
都可以使用這個套件

00:00:41.615 --> 00:00:45.020
但缺點是
你可能會遇到

00:00:45.020 --> 00:00:48.800
不同套件間的版本衝突

00:00:48.800 --> 00:00:52.070
相對於其他的

00:00:52.070 --> 00:00:53.990
套件管理工具

00:00:53.990 --> 00:00:57.620
例如你可能熟悉的NuGet、NPM等

00:00:57.620 --> 00:01:00.080
其他的套件管理工具

00:01:00.080 --> 00:01:03.670
預設會安裝套件到
專案的資料夾中

00:01:03.670 --> 00:01:07.670
也就是只有單一專案下的
程式能使用安裝的套件

00:01:07.670 --> 00:01:09.860
但Python不是這樣

00:01:09.860 --> 00:01:12.230
預設情況下
Python會把套件

00:01:12.230 --> 00:01:15.980
安裝到全域範圍中

00:01:15.980 --> 00:01:19.280
所以如果你需要一個
本地環境給特定的應用程式

00:01:19.280 --> 00:01:22.505
最佳做法就是

00:01:22.505 --> 00:01:25.820
使用Python的虛擬環境

00:01:25.820 --> 00:01:29.965
(Virtual Environment)

00:01:29.965 --> 00:01:32.540
所謂虛擬環境其實就是

00:01:32.540 --> 00:01:35.780
一個資料夾

00:01:35.780 --> 00:01:38.510
你把執行你的應用程式

00:01:38.510 --> 00:01:41.795
所需要的所有套件

00:01:41.795 --> 00:01:44.900
都安裝到那個資料夾中

00:01:44.900 --> 00:01:48.440
而不是安裝到
全域範圍的資料夾

00:01:48.440 --> 00:01:51.680
好的，我首先當然
要創建那個資料夾

00:01:51.680 --> 00:01:54.200
我們有一個實用的工具

00:01:54.200 --> 00:01:57.895
叫做"virtualenv"
可以做到這一點

00:01:57.895 --> 00:02:01.940
首先我們需要安裝
"virtualenv"

00:02:01.940 --> 00:02:05.990
一樣使用"pip"來安裝

00:02:05.990 --> 00:02:07.220
這樣pip會把套件

00:02:07.220 --> 00:02:10.165
安裝到全域範圍

00:02:10.165 --> 00:02:15.005
然後下一步是
創建虛擬環境

00:02:15.005 --> 00:02:16.730
如同我之前說的

00:02:16.730 --> 00:02:20.960
虛擬環境

00:02:20.960 --> 00:02:22.505
就是一個資料夾

00:02:22.505 --> 00:02:25.640
所以不管在Windows或
OSX/Linux的環境下

00:02:25.640 --> 00:02:29.390
都要指定資料夾的名稱

00:02:29.390 --> 00:02:33.440
你可以依照大多數人
約定成俗的慣例

00:02:33.440 --> 00:02:37.415
把它命名為"venv"

00:02:37.415 --> 00:02:39.410
也可以隨你高興

00:02:39.410 --> 00:02:41.405
想叫甚麼就叫甚麼

00:02:41.405 --> 00:02:43.820
也可以取有意義的名稱

00:02:43.820 --> 00:02:46.010
這完全由你決定

00:02:46.010 --> 00:02:48.980
至於創建虛擬環境的指令

00:02:48.980 --> 00:02:53.300
在不同作業系統
可能會有不同

00:02:53.300 --> 00:02:55.565
如果你使用的是Windows

00:02:55.565 --> 00:02:57.679
"python -m venv"

00:02:57.679 --> 00:02:59.080
參數 "-m"

00:02:59.080 --> 00:03:03.410
代表執行某個特定的模組

00:03:03.410 --> 00:03:08.120
"venv"是虛擬環境的模組名稱

00:03:08.120 --> 00:03:09.410
然後指定要創建的

00:03:09.410 --> 00:03:11.405
資料夾名稱

00:03:11.405 --> 00:03:14.030
如果你使用的是Bash shell

00:03:14.030 --> 00:03:16.940
可能是OSX或Linux

00:03:16.940 --> 00:03:23.480
指令會是：
"virtualenv"

00:03:23.480 --> 00:03:25.600
然後是資料夾名稱

00:03:25.600 --> 00:03:31.490
好的，若要需要使用虛擬環境

00:03:31.490 --> 00:03:34.280
需要先啟動它

00:03:34.280 --> 00:03:36.110
你會注意到

00:03:36.110 --> 00:03:38.810
啟動的指令也有所不同

00:03:38.810 --> 00:03:41.350
再次取決於
你的作業系統

00:03:41.350 --> 00:03:44.270
也取決於
在你的命令列環境

00:03:44.270 --> 00:03:46.885
如果你使用Windows

00:03:46.885 --> 00:03:48.470
那在你創建的資料夾中

00:03:48.470 --> 00:03:51.190
有一個"Scripts"的子目路

00:03:51.190 --> 00:03:54.240
然後裡面有幾個

00:03:54.240 --> 00:03:57.095
名稱同為Activate的檔案
但副檔名不同

00:03:57.095 --> 00:03:58.790
如果你使用命令列

00:03:58.790 --> 00:04:00.245
可以執行Activate.bat
這是個批次檔

00:04:00.245 --> 00:04:03.470
如果你使用的是PowerShell
執行Activate.ps1

00:04:03.470 --> 00:04:06.800
如果你用bash shell

00:04:06.800 --> 00:04:09.919
那就是activate

00:04:09.919 --> 00:04:13.655
順便一提
bash也是我個人愛用的環境

00:04:13.655 --> 00:04:16.685
bash的語法有點不同

00:04:16.685 --> 00:04:18.020
最前面的"點"

00:04:18.020 --> 00:04:21.330
代表的是"source"指令

00:04:21.330 --> 00:04:25.260
空一格後是"activate"
的完整路徑

00:04:25.260 --> 00:04:28.245
第二個點代表

00:04:28.245 --> 00:04:31.085
目前的資料夾
也就是你專案的資料夾

00:04:31.085 --> 00:04:34.595
然後後面跟著

00:04:34.595 --> 00:04:37.390
虛擬環境的資料夾名稱

00:04:37.390 --> 00:04:39.220
如我們之前提過的

00:04:39.220 --> 00:04:41.280
通常這個資料夾
就叫"venv"

00:04:41.280 --> 00:04:43.565
但也有可能是
你指定的

00:04:43.565 --> 00:04:46.205
任何資料夾名稱

00:04:46.205 --> 00:04:48.945
如果你使用的是 OSX 或 Linux

00:04:48.945 --> 00:04:51.555
那就和之前一樣了

00:04:51.555 --> 00:04:55.024
會稍微不同的只是
"Scripts"子目錄

00:04:55.024 --> 00:04:57.100
變成了"bin"子目錄

00:04:57.100 --> 00:04:58.790
裡面一樣有"activate"

00:04:58.790 --> 00:05:01.910
執行之後

00:05:01.910 --> 00:05:05.195
就進入虛擬環境

00:05:05.195 --> 00:05:07.130
在虛擬環境中安裝套件

00:05:07.130 --> 00:05:10.460
跟在全域範圍中
基本一樣

00:05:10.460 --> 00:05:12.890
所以你會注意到
我其實只是複製

00:05:12.890 --> 00:05:15.280
並貼上之前的投影片
然後更改標題而已

00:05:15.280 --> 00:05:18.890
一樣是"pip install"
然後是套件名稱

00:05:18.890 --> 00:05:21.620
如果你有"requirements.txt"

00:05:21.620 --> 00:05:24.725
一樣是
"pip install -r requirements.txt"

00:05:24.725 --> 00:05:27.900
好，這一集我們講了不少東西

00:05:27.900 --> 00:05:30.785
我認為學習的最好的方式

00:05:30.785 --> 00:05:34.025
就是實際練習與操作

00:05:34.025 --> 00:05:35.750
所以我接下來會設計

00:05:35.750 --> 00:05:39.170
一個小演示給你
它會創建"helpers.py"

00:05:39.170 --> 00:05:41.120
示範如何匯入

00:05:41.120 --> 00:05:44.210
然後我們將創建虛擬環境

00:05:44.210 --> 00:05:47.825
安裝"colorama"套件
到虛擬環境中

00:05:47.825 --> 00:05:50.360
然後我們在我們的程式中

00:05:50.360 --> 00:05:52.730
使用"colorama"套件裡的東西

00:05:52.730 --> 00:05:55.200
這就是下一單元的內容

