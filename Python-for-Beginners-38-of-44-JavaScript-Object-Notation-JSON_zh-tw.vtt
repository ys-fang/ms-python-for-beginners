WEBVTT

00:00:04.130 --> 00:00:07.784
>> 好的，所以當我們呼叫API

00:00:07.784 --> 00:00:09.630
並取得回傳資料

00:00:09.630 --> 00:00:12.000
這一大坨的資料
看起來有點混亂

00:00:12.000 --> 00:00:13.935
我們得到的資料是JSON格式

00:00:13.935 --> 00:00:16.349
所以我們這一集要解釋

00:00:16.349 --> 00:00:20.100
如何拆解JSON結構

00:00:20.100 --> 00:00:23.400
JSON是一種標準資料格式

00:00:23.400 --> 00:00:26.535
用來傳遞資料

00:00:26.535 --> 00:00:29.085
但乍看之下
雜亂的令人生畏

00:00:29.085 --> 00:00:32.250
你在這裡看到的JSON是

00:00:32.250 --> 00:00:34.110
當我呼叫雲端API

00:00:34.110 --> 00:00:36.135
上傳一張北極熊圖片

00:00:36.135 --> 00:00:39.770
由雲端的"analyze image"服務

00:00:39.770 --> 00:00:42.065
所返回的分析結果

00:00:42.065 --> 00:00:43.790
這就是JSON的資料

00:00:43.790 --> 00:00:45.470
看起來的確

00:00:45.470 --> 00:00:47.270
有點嚇人

00:00:47.270 --> 00:00:49.540
要如何使用程式碼
讀取其中的內容呢？

00:00:49.540 --> 00:00:51.280
首先

00:00:51.280 --> 00:00:53.000
在網路上有很多

00:00:53.000 --> 00:00:55.040
稱為JSON Validator或
JSON Formatter的網站

00:00:55.040 --> 00:00:57.155
這些工具

00:00:57.155 --> 00:00:58.610
都可以幫你把

00:00:58.610 --> 00:01:01.610
沒有分段分行的JSON字串

00:01:01.610 --> 00:01:03.950
格式化成為

00:01:03.950 --> 00:01:06.380
容易閱讀的格式

00:01:06.380 --> 00:01:07.805
讓我們讀起來更輕鬆

00:01:07.805 --> 00:01:09.860
我所做的就是

00:01:09.860 --> 00:01:12.755
複製一大坨JSON資料

00:01:12.755 --> 00:01:14.525
然後貼到一個工具網站

00:01:14.525 --> 00:01:17.690
然後工具會自動幫我分段和縮排

00:01:17.690 --> 00:01:19.820
"哦，現在我看得懂了"。

00:01:19.820 --> 00:01:21.150
我拿到的是

00:01:21.150 --> 00:01:22.910
一個叫做"results"的變數

00:01:22.910 --> 00:01:25.220
裡面是JSON格式的資料

00:01:25.220 --> 00:01:26.780
我可以看到裡面有"color"

00:01:26.780 --> 00:01:28.070
這是在說圖片中

00:01:28.070 --> 00:01:31.115
主要的、前景的、背景的顏色

00:01:31.115 --> 00:01:32.510
和重點顏色是甚麼

00:01:32.510 --> 00:01:34.655
以及是不是黑白照片

00:01:34.655 --> 00:01:37.700
嗯，不知為什麼
"isBWImg"出現了兩次

00:01:37.700 --> 00:01:39.380
然後它給了我一個描述

00:01:39.380 --> 00:01:41.975
告訴我它在圖片中
看到了什麼

00:01:41.975 --> 00:01:44.390
"tags"有：熊，北極熊、動物、

00:01:44.390 --> 00:01:46.100
哺乳動物，戶外，水、

00:01:46.100 --> 00:01:47.705
白色、大、等等

00:01:47.705 --> 00:01:49.790
然後它生成一句話的敘述"captions":

00:01:49.790 --> 00:01:52.565
這是一頭大的白色北極熊在水上行走

00:01:52.565 --> 00:01:56.690
以及"requestId"
我這次呼叫API的一個唯一識別碼

00:01:56.690 --> 00:01:59.630
所以，這就是實際上
傳回來的東西

00:01:59.630 --> 00:02:02.945
呼叫"analyze image"服務
然後上傳我的圖片

00:02:02.945 --> 00:02:04.400
這是分析完的結果

00:02:04.400 --> 00:02:07.430
根據我提供的參數

00:02:07.430 --> 00:02:09.995
好的，那我如何在程式中
使用這個結果呢？

00:02:09.995 --> 00:02:11.810
我要如何寫程式來讀取

00:02:11.810 --> 00:02:14.135
這看起來很雜亂的
JSON格式資料？

00:02:14.135 --> 00:02:16.225
即使它事實上有嚴謹的結構

00:02:16.225 --> 00:02:18.200
首先你要知道

00:02:18.200 --> 00:02:20.375
JSON資料的基本模式

00:02:20.375 --> 00:02:22.760
它基本上是一系列的"鍵"、"值"對

00:02:22.760 --> 00:02:24.845
例如你有一個鍵:"requestId"

00:02:24.845 --> 00:02:28.325
和值："requestId"的值

00:02:28.325 --> 00:02:30.090
有時模式則是

00:02:30.090 --> 00:02:31.800
你有一個鍵
值則是另一組"鍵"、"值"對

00:02:31.800 --> 00:02:33.720
一系列的"子鍵"和"子值"

00:02:33.720 --> 00:02:37.050
因此對於"color"
你會注意到每種顏色都有

00:02:37.050 --> 00:02:39.120
各自的鍵值對
"dominantColorForeground"

00:02:39.120 --> 00:02:40.230
"dominantColorBackground"

00:02:40.230 --> 00:02:42.275
"dominantColors"等等
每個鍵都配對一個值

00:02:42.275 --> 00:02:44.060
所以這是一個

00:02:44.060 --> 00:02:47.250
子鍵和子值的例子

00:02:47.250 --> 00:02:51.350
而有些情況
你的值可能是一個清單

00:02:51.350 --> 00:02:52.790
就像這裡的"tags"

00:02:52.790 --> 00:02:55.750
"tags"是鍵

00:02:55.750 --> 00:02:58.265
而值有多個

00:02:58.265 --> 00:03:00.950
所以分析服務看到圖片裡有熊
它知道那是動物

00:03:00.950 --> 00:03:02.300
它知道在戶外

00:03:02.300 --> 00:03:04.235
它看到了水
它知道圖片主要是白色的

00:03:04.235 --> 00:03:06.200
所有這些都被放到"tags"中

00:03:06.200 --> 00:03:09.545
所以你會看到方括號
表示它是一個清單

00:03:09.545 --> 00:03:11.570
這些都是不同的"tags"

00:03:11.570 --> 00:03:16.370
所以他們組成一個值的清單

00:03:16.370 --> 00:03:19.360
所以當我們要寫程式去
讀這些資料

00:03:19.360 --> 00:03:21.805
我們要了解資料的結構

00:03:21.805 --> 00:03:23.500
處理JSON資料

00:03:23.500 --> 00:03:25.480
不同的結構
需要不同的方法

00:03:25.480 --> 00:03:26.800
必須知道

00:03:26.800 --> 00:03:28.330
它是"鍵"、"值"

00:03:28.330 --> 00:03:30.070
還是"鍵"和"子鍵值對"

00:03:30.070 --> 00:03:32.305
或是"鍵"和"值的清單"

00:03:32.305 --> 00:03:34.630
如果你想從"鍵"、"值"

00:03:34.630 --> 00:03:36.290
這樣的結構中取值

00:03:36.290 --> 00:03:37.945
這是最容易做到的

00:03:37.945 --> 00:03:41.205
我們要做的就是
"import json"

00:03:41.205 --> 00:03:43.335
然後取得"results"

00:03:43.335 --> 00:03:45.540
當我們呼叫Web Service

00:03:45.540 --> 00:03:47.830
Web Service會返回
JSON格式的資料

00:03:47.830 --> 00:03:50.770
我們把它儲存到
變數"results"

00:03:50.770 --> 00:03:52.060
所以"results"

00:03:52.060 --> 00:03:55.045
是一個包含JSON資料的變數

00:03:55.045 --> 00:03:57.125
所以我要寫

00:03:57.125 --> 00:03:59.010
results['requestId']

00:03:59.010 --> 00:04:02.960
它會返回"requestId"這個鍵的值

00:04:02.960 --> 00:04:04.445
所以你把"鍵"給它

00:04:04.445 --> 00:04:07.055
它返回"值"

00:04:07.055 --> 00:04:09.710
如果資料中包含

00:04:09.710 --> 00:04:11.500
子鍵和子值呢？

00:04:11.500 --> 00:04:13.770
這裡我有不同顏色

00:04:13.770 --> 00:04:15.000
標示了"鍵"、"子鍵"、"子值"

00:04:15.000 --> 00:04:17.010
我想知道
"dominantColorBackground"

00:04:17.010 --> 00:04:18.410
意思就是主要的背景顏色

00:04:18.410 --> 00:04:20.525
在這個範例中是

00:04:20.525 --> 00:04:21.860
白色

00:04:21.860 --> 00:04:25.505
你可以把這個

00:04:25.505 --> 00:04:28.830
想像成好幾層的資料夾

00:04:28.830 --> 00:04:30.075
進入"color"中

00:04:30.075 --> 00:04:31.990
找"dominantColorBackground"

00:04:31.990 --> 00:04:34.145
把它想像成
資料夾和子資料夾

00:04:34.145 --> 00:04:37.070
程式寫起來就是
results['color']['dominantColorBackground']

00:04:37.070 --> 00:04:40.770
一樣給它指定"鍵"的名稱

00:04:40.770 --> 00:04:43.730
它會返回值 - 白色

00:04:43.730 --> 00:04:47.750
所以用
資料夾和子資料夾來比喻

00:04:47.750 --> 00:04:49.760
比較容易想像

00:04:49.760 --> 00:04:52.745
"鍵"與
"子鍵值對"的關係

00:04:52.745 --> 00:04:55.880
那如果你的值是一個清單

00:04:55.880 --> 00:04:58.820
例如results中的"description"

00:04:58.820 --> 00:05:00.380
裡面"tags"鍵的值是一個清單

00:05:00.380 --> 00:05:04.625
包含各種標籤

00:05:04.625 --> 00:05:07.030
所以如果我想要
清單中的第一個值呢？

00:05:07.030 --> 00:05:09.735
回想一下我們
在清單那一集學到的

00:05:09.735 --> 00:05:11.615
可以用索引值來指定

00:05:11.615 --> 00:05:14.180
索引值零就是
清單中的第一個項目

00:05:14.180 --> 00:05:15.995
索引值一是清單中的第二個項目等等

00:05:15.995 --> 00:05:18.485
所以我可以說

00:05:18.485 --> 00:05:21.545
results['description']['tags'][0]

00:05:21.545 --> 00:05:23.240
在"description"之下

00:05:23.240 --> 00:05:25.430
的"tags"鍵

00:05:25.430 --> 00:05:27.530
然後指定要第幾個項目

00:05:27.530 --> 00:05:30.530
索引值零代表了第一個項目

00:05:30.530 --> 00:05:32.510
在這個例子中

00:05:32.510 --> 00:05:33.925
我會得到"bear"

00:05:33.925 --> 00:05:35.750
而可能大多數時候

00:05:35.750 --> 00:05:37.370
你想要取得所有的標籤

00:05:37.370 --> 00:05:39.440
那你就要使用迴圈了

00:05:39.440 --> 00:05:40.950
程式會寫成：

00:05:40.950 --> 00:05:44.375
for item in results...

00:05:44.375 --> 00:05:46.340
要進去"description"

00:05:46.340 --> 00:05:49.820
然後取得"tags"鍵值清單中的
每個值，然後輸出到螢幕上

00:05:49.820 --> 00:05:52.535
這樣就能看到

00:05:52.535 --> 00:05:56.670
返回的JSON資料中的
每一個標籤

00:05:58.130 --> 00:06:01.215
除了需要讀取JSON資料

00:06:01.215 --> 00:06:03.990
有時你可能也需要
創建JSON資料

00:06:03.990 --> 00:06:07.855
傳遞到Web Service的資料格式
可能指定是JSON

00:06:07.855 --> 00:06:09.430
如果是這樣的話

00:06:09.430 --> 00:06:12.070
要如何在程式中
創建JSON呢？

00:06:12.070 --> 00:06:14.830
通常，我們使用字典

00:06:14.830 --> 00:06:18.640
字典也同樣有
"鍵"、"值"對這樣的資料結構

00:06:18.640 --> 00:06:21.040
就跟JSON一樣

00:06:21.040 --> 00:06:23.695
所以字典跟JSON
可以完美的對應

00:06:23.695 --> 00:06:25.000
好消息是

00:06:25.000 --> 00:06:27.400
你可以使用json函式庫

00:06:27.400 --> 00:06:30.000
可以使用
"json.dumps()"函數

00:06:30.000 --> 00:06:33.715
給它一個字典物件當作參數
它就能從字典創建JSON物件

00:06:33.715 --> 00:06:36.310
而字典的資料結構

00:06:36.310 --> 00:06:39.185
一樣有三種

00:06:39.185 --> 00:06:42.280
如果你只是想
創建"鍵"、"值"對

00:06:42.280 --> 00:06:45.030
就像我剛才創建的字典

00:06:45.030 --> 00:06:48.505
"person_dict"

00:06:48.505 --> 00:06:52.345
有克里斯多夫的名字
和哈里森的姓氏

00:06:52.345 --> 00:06:55.450
這是兩組"鍵"、"值"對
在字典中

00:06:55.450 --> 00:06:57.940
然後你可以添加
額外的鍵值對

00:06:57.940 --> 00:07:01.100
只需要添加另一個鍵"City"

00:07:01.100 --> 00:07:04.695
然後值是"Seattle"
到字典中

00:07:04.695 --> 00:07:09.265
然後我使用json函式庫的函數
"json.dumps()"

00:07:09.265 --> 00:07:10.885
這是函式庫中的
其中一個函數

00:07:10.885 --> 00:07:12.085
把字典當參數

00:07:12.085 --> 00:07:14.060
而它將返回JSON物件

00:07:14.060 --> 00:07:15.930
然後我列印出來

00:07:15.930 --> 00:07:18.565
你可以看到它顯示三個鍵值對

00:07:18.565 --> 00:07:20.395
所以你只需要鍵值

00:07:20.395 --> 00:07:21.835
鍵值、鍵值

00:07:21.835 --> 00:07:23.264
然後創建一個字典物件

00:07:23.264 --> 00:07:26.995
然後使用"json.dump()"
把字典變成一個JSON物件

00:07:26.995 --> 00:07:31.950
但如果我需要"鍵"、"子鍵"這樣的結構呢？

00:07:31.950 --> 00:07:34.260
如果你需要子鍵、子值

00:07:34.260 --> 00:07:35.790
會有點複雜

00:07:35.790 --> 00:07:37.130
但你其實你要做的就是

00:07:37.130 --> 00:07:40.330
創建一個字典中的字典

00:07:40.330 --> 00:07:43.205
之後透過實作你就會習慣它

00:07:43.205 --> 00:07:45.200
我還是用"person_dict"這個字典

00:07:45.200 --> 00:07:47.450
它包含
克里斯多夫的名字

00:07:47.450 --> 00:07:49.445
和姓：哈里森

00:07:49.445 --> 00:07:50.720
但如果我現在想要

00:07:50.720 --> 00:07:53.420
一個JSON物件

00:07:53.420 --> 00:07:56.310
內容是整個員工目錄

00:07:56.310 --> 00:07:58.035
內容包含了每個員工職位

00:07:58.035 --> 00:07:59.715
而職位關聯到某一個人

00:07:59.715 --> 00:08:01.605
而人的資料中
有他們的名字、

00:08:01.605 --> 00:08:03.615
姓氏、居住城市等等

00:08:03.615 --> 00:08:06.050
所以我要創建一個
員工目錄的字典

00:08:06.050 --> 00:08:08.270
有"Program Manager"的鍵

00:08:08.270 --> 00:08:12.105
而"Program Manager"的值

00:08:12.105 --> 00:08:13.935
又是一個字典

00:08:13.935 --> 00:08:15.840
包含那個人的基本資料

00:08:15.840 --> 00:08:18.000
所以在這個範例中

00:08:18.000 --> 00:08:19.845
我創建員工詞典
"staff_dict"

00:08:19.845 --> 00:08:24.125
然後在"staff_dict"字典中
新增"Program Manager"鍵

00:08:24.125 --> 00:08:26.300
然後它的值

00:08:26.300 --> 00:08:30.715
等於"person_dict"
字典物件

00:08:30.715 --> 00:08:34.910
這樣"staff_dict"
實際上成了一個鍵值對

00:08:34.910 --> 00:08:36.260
也就是

00:08:36.260 --> 00:08:39.335
一個嵌套的字典

00:08:39.335 --> 00:08:41.390
最後如果需要創建

00:08:41.390 --> 00:08:44.650
一個包含清單的JSON物件

00:08:44.650 --> 00:08:47.320
這次不是把字典放到字典裏面

00:08:47.320 --> 00:08:50.285
而是把清單放到字典裡面

00:08:50.285 --> 00:08:52.250
這我們在關於清單和集合的章節學過

00:08:52.250 --> 00:08:53.930
如何創建一個清單

00:08:53.930 --> 00:08:55.580
所以我要做的就是

00:08:55.580 --> 00:08:57.410
創建"person_dict"字典

00:08:57.410 --> 00:09:01.230
鍵"first"
值"Christopher"

00:09:01.230 --> 00:09:03.495
鍵"last"
值"Harrison"

00:09:03.495 --> 00:09:07.010
然後我要創建一個清單
包含他所有會的程式設計語言

00:09:07.010 --> 00:09:10.010
他懂"C#"、"Python"和"JavaScript"

00:09:10.010 --> 00:09:12.410
這是一個Python的清單物件

00:09:12.410 --> 00:09:16.945
然後我在"person_dict"
字典中增加一個鍵"languages"

00:09:16.945 --> 00:09:19.660
並將其設置為清單"languages_list"

00:09:19.660 --> 00:09:22.105
然後我將字典"person_dict"

00:09:22.105 --> 00:09:27.085
把它變成JSON
這樣我的JSON物件中就有一個清單

00:09:27.085 --> 00:09:29.690
所以這是你像在Python中

00:09:29.690 --> 00:09:33.350
創建JSON三種基本結構的方法

00:09:33.420 --> 00:09:36.290
你可能需要一點時間去習慣

00:09:36.290 --> 00:09:38.730
不管是讀取JSON或寫入JSON

00:09:38.730 --> 00:09:41.230
你可能無法第一次就寫對

00:09:41.230 --> 00:09:42.890
所以我有幾個提示給你

00:09:42.890 --> 00:09:47.280
一、多多使用"print()"來幫助你除錯

00:09:47.280 --> 00:09:50.420
當你執行"json.dump()"
來創建JSON物件後

00:09:50.420 --> 00:09:51.875
把該JSON物件輸出到螢幕上

00:09:51.875 --> 00:09:54.005
以確保它看起來
跟你期望的一樣

00:09:54.005 --> 00:09:55.700
當你嘗試讀取JSON物件時

00:09:55.700 --> 00:09:59.960
你可能需要"print()"
顯示你讀取的值

00:09:59.960 --> 00:10:02.180
並逐步解決它
直到你正確的

00:10:02.180 --> 00:10:04.655
得到你要的值、子鍵、子值
或清單中的某個值

00:10:04.655 --> 00:10:06.200
所以多用"print()"

00:10:06.200 --> 00:10:09.085
可以更快的幫助你
掌握JSON技巧

00:10:09.085 --> 00:10:12.150
也可以使用JSON Linting工具

00:10:12.150 --> 00:10:13.500
你可以上網搜尋"JSON Linter"

00:10:13.500 --> 00:10:15.520
然後你複製和貼上
你的JSON資料

00:10:15.520 --> 00:10:17.310
它會還給你
漂亮的格式

00:10:17.310 --> 00:10:19.265
容易閱讀的格式

00:10:19.265 --> 00:10:21.200
這樣你才能看到

00:10:21.200 --> 00:10:23.285
鍵、子鍵或
鍵、清單的模式

00:10:23.285 --> 00:10:25.090
看得出誰跟誰是一對的

00:10:25.090 --> 00:10:27.685
最後還有一招就是

00:10:27.685 --> 00:10:30.230
如果我第一次呼叫一個會
返回JSON的API

00:10:30.230 --> 00:10:33.540
我通常複製他返回的JSON

00:10:33.540 --> 00:10:34.790
然後貼到像是

00:10:34.790 --> 00:10:37.070
記事本這樣的編輯器中

00:10:37.070 --> 00:10:38.630
這樣我才能不時參考它
試著找出

00:10:38.630 --> 00:10:41.225
取得某個值的正確方法

00:10:41.225 --> 00:10:45.560
好，理論說到這裡
讓我們在下一單元實際練習把程式寫出來

