WEBVTT

00:00:04.610 --> 00:00:07.560
現在你學會了
如何使用字串,

00:00:07.560 --> 00:00:09.150
讓我們來看看我們如何與

00:00:09.150 --> 00:00:11.820
號碼在我們的
Python 代碼。

00:00:11.820 --> 00:00:15.525
就像字串編號可以
存儲在變數內。

00:00:15.525 --> 00:00:16.860
我們總是想
給出這些變數

00:00:16.860 --> 00:00:19.580
好有意義的名字得到
習慣馬上,

00:00:19.580 --> 00:00:21.030
我們可以傳遞這些變數

00:00:21.030 --> 00:00:23.085
到函數,如
列印語句。

00:00:23.085 --> 00:00:26.040
因此,列印語句可以採取
包含字串的變數,

00:00:26.040 --> 00:00:27.450
包含數位的變數。

00:00:27.450 --> 00:00:28.800
不管怎樣,這都無關緊要,

00:00:28.800 --> 00:00:32.430
它只是列印它是什麼
接收到螢幕上。

00:00:32.430 --> 00:00:34.880
當然,當你與

00:00:34.880 --> 00:00:36.950
數位在您的代碼
某一點,你可能

00:00:36.950 --> 00:00:39.500
將不得不做數學
計算以找出

00:00:39.500 --> 00:00:41.570
人民的工資或稅收,

00:00:41.570 --> 00:00:44.120
事情很漂亮
在我們的代碼中很常見。

00:00:44.120 --> 00:00:47.090
因此,我們可以做數學
數位和好消息是

00:00:47.090 --> 00:00:49.460
它會看起來像
你上學的時候就這麼做了

00:00:49.460 --> 00:00:51.620
你有加號
補充,

00:00:51.620 --> 00:00:53.480
減法的負號,

00:00:53.480 --> 00:00:55.610
你有分裂的斜線,

00:00:55.610 --> 00:00:57.200
然後唯一的事情
這是一點點

00:00:57.200 --> 00:00:59.060
不同的是它的
的星號符號

00:00:59.060 --> 00:01:01.430
乘法和指數或

00:01:01.430 --> 00:01:04.415
的功率為雙星號。

00:01:04.415 --> 00:01:07.550
所以如果我有兩個數字
在這裡,六和二,

00:01:07.550 --> 00:01:09.965
6 加 2 列印出 8,

00:01:09.965 --> 00:01:11.660
6 到 2 的功率,

00:01:11.660 --> 00:01:14.240
6平方,會還給我36。

00:01:14.240 --> 00:01:15.800
因此,我們可以做很多

00:01:15.800 --> 00:01:17.450
不同的數學運算

00:01:17.450 --> 00:01:19.610
一旦我們開始玩數位。

00:01:19.610 --> 00:01:21.980
有一件事你會碰到

00:01:21.980 --> 00:01:24.650
非常快,一旦你開始
處理數位,

00:01:24.650 --> 00:01:27.580
是當你開始
組合不同的資料類型。

00:01:27.580 --> 00:01:30.200
因此,字串資料類型
在數位資料類型中,

00:01:30.200 --> 00:01:32.300
Python 會感到困惑。

00:01:32.300 --> 00:01:34.475
所以在這種情況下,我有,

00:01:34.475 --> 00:01:35.750
嘿,二月有多少天？

00:01:35.750 --> 00:01:38.555
28,我只是說,
嘿,列印語句

00:01:38.555 --> 00:01:40.025
讓我們在螢幕上顯示,

00:01:40.025 --> 00:01:41.980
2月28天

00:01:41.980 --> 00:01:43.830
我們已經列印了數位

00:01:43.830 --> 00:01:45.560
我們已經列印
字串時

00:01:45.560 --> 00:01:47.615
我們運行這個代碼,它吹。

00:01:47.615 --> 00:01:50.000
但是為什麼？好吧,如果你

00:01:50.000 --> 00:01:52.355
實際上看看錯誤訊息
它會給你一個提示。

00:01:52.355 --> 00:01:56.835
不支援的運算元類型
加 int 和字串。

00:01:56.835 --> 00:01:58.520
它告訴什麼
你是它實際上是

00:01:58.520 --> 00:02:00.530
混淆的加號。

00:02:00.530 --> 00:02:02.540
五加六,它知道

00:02:02.540 --> 00:02:05.045
一個數位加上一個數位I
應該做補充。

00:02:05.045 --> 00:02:07.100
蘇珊加上我回到

00:02:07.100 --> 00:02:09.680
字串,它知道串聯
字串在一起。

00:02:09.680 --> 00:02:11.440
但是當你給我一個號碼時

00:02:11.440 --> 00:02:14.730
一個字串,我應該添加
他們像數位一樣在一起？

00:02:14.730 --> 00:02:16.820
或者我應該
串聯他們像字串？

00:02:16.820 --> 00:02:18.185
我很困惑

00:02:18.185 --> 00:02:20.120
所以當你使用Python時,

00:02:20.120 --> 00:02:22.040
有時候你必須告訴它

00:02:22.040 --> 00:02:25.650
我知道二月的日子
28 在這種情況下是一個數位,

00:02:25.650 --> 00:02:28.010
但我要你治療
它就像一個字串在這裡。

00:02:28.010 --> 00:02:29.299
我要你連在一起

00:02:29.299 --> 00:02:31.915
該數位
短語在二月的天,

00:02:31.915 --> 00:02:34.935
所以我看到28天
二月在螢幕上。

00:02:34.935 --> 00:02:38.200
因此,我們必須做什麼
稱為類型轉換。

00:02:38.200 --> 00:02:39.705
所以要習慣這個

00:02:39.705 --> 00:02:41.880
你會看到它
在你的代碼中有很多,

00:02:41.880 --> 00:02:44.135
它會上來
各地。

00:02:44.135 --> 00:02:47.225
因此,我們要做的就是為Python

00:02:47.225 --> 00:02:50.060
是轉換
任何資料類型到字串,

00:02:50.060 --> 00:02:51.875
你只要調用這些字串函數。

00:02:51.875 --> 00:02:53.790
因此,我們調用str函數,

00:02:53.790 --> 00:02:56.930
我們在二月度過幾天
這是一個數位,

00:02:56.930 --> 00:02:59.260
現在它要
把它當作一個字串。

00:02:59.260 --> 00:03:00.860
現在我們說,你想串聯

00:03:00.860 --> 00:03:03.110
字串加上另一個
字串,我知道該怎麼做,

00:03:03.110 --> 00:03:04.835
把這些放在一起,

00:03:04.835 --> 00:03:07.595
顯示我們的資訊
螢幕正確。

00:03:07.595 --> 00:03:10.850
因此,字串函數正在
節省你很多,當你

00:03:10.850 --> 00:03:14.425
開始使用數位和
字串混合兩個。

00:03:14.425 --> 00:03:19.720
現在,當我這樣做,我實際上是
將數位存儲為字串,

00:03:19.720 --> 00:03:22.400
並儘快你存儲
數位作為字串,

00:03:22.400 --> 00:03:24.890
也創建提及效果。

00:03:24.890 --> 00:03:27.995
所以,如果我拿第一個數位,
我把數位5放在了它裡

00:03:27.995 --> 00:03:30.710
如果我把報價周圍
那五號,它現在

00:03:30.710 --> 00:03:33.920
把它當作一個字串,
包含數位 5,

00:03:33.920 --> 00:03:35.810
第二個數字等於六,

00:03:35.810 --> 00:03:38.480
包含數位 6 的字串。

00:03:38.480 --> 00:03:40.310
那麼,會發生什麼
當你串聯

00:03:40.310 --> 00:03:42.490
兩個字串在一起
加號？

00:03:42.490 --> 00:03:46.300
它放置兩個字串
在一起,所以我得到56。

00:03:46.340 --> 00:03:49.750
好吧,在這裡你可以
看看發生了什麼

00:03:49.750 --> 00:03:51.380
但總有一段時間,這正在發生

00:03:51.380 --> 00:03:53.810
回到幕後
它會抓住你。

00:03:53.810 --> 00:03:56.915
假設您正在使用
聰明的輸入函數

00:03:56.915 --> 00:03:58.880
要求使用者輸入值。

00:03:58.880 --> 00:04:03.455
打開輸入函數
將始終返回字串。

00:04:03.455 --> 00:04:06.920
因此,如果您要求使用者輸入
一個數位,他們輸入五,

00:04:06.920 --> 00:04:09.005
然後你輸入一個
第二個數字,你輸入六,

00:04:09.005 --> 00:04:10.880
然後你說,讓我們
列印結果

00:04:10.880 --> 00:04:12.695
第一個數位加上第二個數字,

00:04:12.695 --> 00:04:15.005
它會列印出56。

00:04:15.005 --> 00:04:18.230
所以就像之前我
需要一種說法,

00:04:18.230 --> 00:04:19.580
嘿,我知道你覺得

00:04:19.580 --> 00:04:21.425
數位,但我想要你
對待它像一個字串。

00:04:21.425 --> 00:04:23.540
有時,您有一個數位存儲在

00:04:23.540 --> 00:04:26.435
一個字串,你需要
把它當作一個數位,

00:04:26.435 --> 00:04:28.040
我想用它做數學題。

00:04:28.040 --> 00:04:31.895
所以有一個不同的
資料類型轉換,

00:04:31.895 --> 00:04:35.315
資料類型轉換更改
從一種資料類型到另一種資料類型。

00:04:35.315 --> 00:04:38.645
所以上次我使用字串
從數位轉換為字串,

00:04:38.645 --> 00:04:41.635
現在我需要用點東西
從字串轉換為數字。

00:04:41.635 --> 00:04:44.720
我有兩個選擇
函數。

00:04:44.720 --> 00:04:47.825
int 函數將
將其轉換為整數,

00:04:47.825 --> 00:04:51.905
一個整數;1,2,3,4。

00:04:51.905 --> 00:04:54.470
浮動將轉換
它成一些

00:04:54.470 --> 00:04:56.975
浮動數位或什麼
可能有小數位數;

00:04:56.975 --> 00:05:02.375
1.0、1.5、2.6 或任何內容
就像那是一個浮標

00:05:02.375 --> 00:05:06.635
因此,通過使用 int 函數和
如果我說列印整數版本

00:05:06.635 --> 00:05:08.390
第一個數目的
加上整數版本

00:05:08.390 --> 00:05:10.680
第二個數字或浮點加浮點,

00:05:10.680 --> 00:05:12.710
你可以看到它實際上做數學

00:05:12.710 --> 00:05:16.460
正確,並添加 5 加 6
一起給我11。

00:05:16.460 --> 00:05:20.090
所以當你
使用數位

00:05:20.090 --> 00:05:21.170
確保它使用它作為

00:05:21.170 --> 00:05:23.605
正確的資料類型
在正確的時間。

00:05:23.605 --> 00:05:25.640
如果你想知道
什麼其他情況

00:05:25.640 --> 00:05:26.990
你可能在用數位

00:05:26.990 --> 00:05:29.180
基本上有
兩種情況:一個

00:05:29.180 --> 00:05:31.940
你正在做數學運算
來計算薪水,

00:05:31.940 --> 00:05:33.650
計算稅金,等等,

00:05:33.650 --> 00:05:35.090
和其他地方
你會碰到

00:05:35.090 --> 00:05:37.040
數位是當我們開始
進入事物

00:05:37.040 --> 00:05:38.600
像陣列和清單和

00:05:38.600 --> 00:05:40.250
您可能需要指出
到索引值。

00:05:40.250 --> 00:05:41.660
說從這個位置開始,

00:05:41.660 --> 00:05:44.060
轉到此位置或
轉到此行,

00:05:44.060 --> 00:05:45.920
你會發現數位
有用的,以及。

00:05:45.920 --> 00:05:50.610
因此,讓我們退後一步,從這個和
去看看數位編碼。

